/********************************************************************************
** Form generated from reading UI file 'esp_mqtt_config_window.ui'
**
** Created by: Qt User Interface Compiler version 5.15.2
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_ESP_MQTT_CONFIG_WINDOW_H
#define UI_ESP_MQTT_CONFIG_WINDOW_H

#include <QtCore/QVariant>
#include <QtWidgets/QApplication>
#include <QtWidgets/QCheckBox>
#include <QtWidgets/QComboBox>
#include <QtWidgets/QGroupBox>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QPlainTextEdit>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QWidget>

QT_BEGIN_NAMESPACE

class Ui_ESP_MQTT_Config_Window
{
public:
    QWidget *centralwidget;
    QGroupBox *com_port_groupBox;
    QComboBox *port_list_comboBox;
    QComboBox *baudrate_comboBox;
    QLabel *port_label;
    QLabel *baudrate_label;
    QPushButton *connect_pushButton;
    QPushButton *close_pushButton;
    QLabel *connect_state_label;
    QPlainTextEdit *data_from_com_port_plainTextEdit;
    QCheckBox *data_from_comport_auto_scroll_checkBox;
    QPushButton *data_from_com_port_clear_all_pushButton;
    QGroupBox *mqtt_setting_groupBox;
    QTabWidget *setting_tabWidget;
    QWidget *start_up_tab;
    QGroupBox *groupBox_2;
    QLineEdit *broker_port_lineEdit;
    QPushButton *broker_port_pushButton;
    QPushButton *broker_ip_pushButton;
    QLineEdit *broker_ip_lineEdit;
    QLabel *broker_port_label;
    QLabel *broker_ip_label;
    QGroupBox *groupBox_3;
    QLabel *protocol_level_label;
    QCheckBox *will_flag_checkBox;
    QLabel *will_topic_label;
    QPushButton *password_pushButton;
    QLabel *user_name_label;
    QCheckBox *clean_session_checkBox;
    QLabel *will_message_label;
    QLineEdit *user_name_lineEdit;
    QLabel *password_label;
    QCheckBox *password_flag_checkBox;
    QPushButton *connect_flag_pushButton;
    QPushButton *user_name_pushButton;
    QPushButton *protocol_name_pushButton;
    QComboBox *will_qos_comboBox;
    QLineEdit *will_topic_lineEdit;
    QPushButton *protocol_level_pushButton;
    QLineEdit *protocol_name_lineEdit;
    QLineEdit *will_message_lineEdit;
    QLineEdit *protocol_level_lineEdit;
    QCheckBox *user_flag_checkBox;
    QLineEdit *password_lineEdit;
    QLabel *protocol_name_label;
    QLabel *will_qos_label;
    QPushButton *will_message_pushButton;
    QCheckBox *will_retain_checkBox;
    QPushButton *will_topic_pushButton;
    QLabel *keep_alive_label;
    QPushButton *keep_alive_pushButton;
    QLineEdit *keep_alive_lineEdit;
    QLabel *client_identifier_label;
    QLineEdit *client_identifier_lineEdit;
    QPushButton *client_identifier_pushButton;
    QCheckBox *start_up_general_setting_checkBox;
    QCheckBox *general_setting_without_authentication_checkBox;
    QPushButton *generate_random_id_pushButton;
    QCheckBox *show_password_checkBox;
    QLabel *password_label_2;
    QGroupBox *groupBox_4;
    QLabel *max_qos_label;
    QPushButton *max_qos_pushButton;
    QComboBox *max_qos_comboBox;
    QLabel *topic_filter_label;
    QLineEdit *topic_filter_lineEdit;
    QPushButton *topic_filter_pushButton;
    QLabel *subscribe_packet_index_label;
    QLineEdit *subscribe_packet_index_lineEdit;
    QPushButton *broker_info_setting_to_text;
    QPushButton *connect_packet_setting_to_text;
    QPushButton *subscribe_packet_setting_to_text_3;
    QWidget *publish_tab;
    QCheckBox *publish_general_setting_checkBox;
    QGroupBox *groupBox_5;
    QPlainTextEdit *application_message_plainTextEdit;
    QCheckBox *retain_checkBox;
    QLabel *application_message_label;
    QLineEdit *topic_name_lineEdit;
    QPushButton *topic_name_pushButton;
    QPushButton *message_builder_pushButton;
    QLabel *topic_name_label;
    QCheckBox *dup_flag_checkBox;
    QComboBox *qos_level_comboBox;
    QPushButton *publish_flag_pushButton;
    QLabel *qos_level_label;
    QPushButton *application_message_pushButton;
    QPushButton *application_message_clear_all_pushButton;
    QGroupBox *groupBox_6;
    QPushButton *uart_trigger_sign_pushButton;
    QLineEdit *continous_interval_lineEdit;
    QPushButton *continous_interval_pushButton;
    QLabel *uart_trigger_sign_label;
    QComboBox *publish_mode_comboBox;
    QComboBox *trigger_type_comboBox;
    QPushButton *trigger_type_pushButton;
    QPushButton *push_mode_pushButton;
    QLabel *trigger_pin_label;
    QLabel *continous_interval_label;
    QLabel *push_mode_label;
    QLineEdit *uart_trigger_sign_lineEdit;
    QLabel *trigger_type_label;
    QPushButton *trigger_pin_pushButton;
    QComboBox *trigger_pin_comboBox;
    QLabel *id_filter_label;
    QCheckBox *id_filter_checkBox;
    QPushButton *id_filter_pushButton;
    QPushButton *response_enable_pushButton;
    QLabel *response_enable_label;
    QCheckBox *response_enable_checkBox;
    QPushButton *print_mqtt_event_pushButton;
    QCheckBox *print_mqtt_event_checkBox;
    QLabel *print_mqtt_event_label;
    QLabel *print_mqtt_message_label;
    QPushButton *print_mqtt_message_pushButton;
    QPushButton *publish_data_from_serial_pushButton;
    QLabel *publish_data_from_serial_label;
    QLabel *mqtt_message_as_label;
    QComboBox *mqtt_message_type_comboBox;
    QComboBox *serial_message_type_comboBox;
    QLabel *publish_data_from_serial_as_label;
    QPushButton *publish_packet_setting_to_text;
    QPushButton *activity_config_setting_to_text;
    QWidget *hardware_tab;
    QTabWidget *hardware_tabWidget;
    QWidget *gpio_tab;
    QComboBox *pin_5_comboBox;
    QPushButton *pin_14_pushButton;
    QPushButton *pin_5_pushButton;
    QLabel *pin_15_label;
    QComboBox *pin_16_comboBox;
    QLabel *pin_2_label;
    QComboBox *pin_13_comboBox;
    QPushButton *pin_2_pushButton;
    QLabel *pin_5_label;
    QPushButton *pin_0_pushButton;
    QPushButton *pin_15_pushButton;
    QPushButton *pin_4_pushButton;
    QComboBox *pin_0_comboBox;
    QPushButton *pin_13_pushButton;
    QLabel *pin_0_label;
    QLabel *pin_14_label;
    QLabel *pin_16_label;
    QComboBox *pin_4_comboBox;
    QComboBox *pin_14_comboBox;
    QLabel *pin_12_label;
    QLabel *pin_4_label;
    QComboBox *pin_12_comboBox;
    QPushButton *pin_12_pushButton;
    QComboBox *pin_2_comboBox;
    QPushButton *pin_16_pushButton;
    QLabel *pin_13_label;
    QComboBox *pin_15_comboBox;
    QGroupBox *groupBox;
    QLabel *pin_0_label_2;
    QPushButton *pin_4_init_state_pushButton;
    QPushButton *pin_14_init_state_pushButton;
    QLabel *pin_4_label_2;
    QPushButton *pin_16_init_state_pushButton;
    QPushButton *pin_13_init_state_pushButton;
    QPushButton *pin_12_init_state_pushButton;
    QLabel *pin_13_label_2;
    QComboBox *pin_16_init_state_comboBox;
    QPushButton *pin_15_init_state_pushButton;
    QLabel *pin_14_label_2;
    QLabel *pin_15_label_2;
    QLabel *pin_5_label_2;
    QPushButton *pin_0_init_state_pushButton;
    QLabel *pin_16_label_2;
    QLabel *pin_12_label_2;
    QPushButton *pin_5_init_state_pushButton;
    QPushButton *pin_2_init_state_pushButton;
    QLabel *pin_2_label_2;
    QPushButton *set_all_to_0_pushButton;
    QPushButton *set_all_to_1_pushButton;
    QPushButton *set_all_to_old_pushButton;
    QComboBox *pin_5_init_state_comboBox;
    QComboBox *pin_4_init_state_comboBox;
    QComboBox *pin_0_init_state_comboBox;
    QComboBox *pin_14_init_state_comboBox;
    QComboBox *pin_12_init_state_comboBox;
    QComboBox *pin_13_init_state_comboBox;
    QComboBox *pin_15_init_state_comboBox;
    QComboBox *pin_2_init_state_comboBox;
    QPushButton *all_to_input_pushButton;
    QPushButton *all_to_input_pullup_pushButton;
    QPushButton *all_to_output_pushButton;
    QWidget *serial_tab;
    QComboBox *setting_baudrate_comboBox;
    QLabel *setting_baudrate_label;
    QPushButton *setting_baudrate_pushButton;
    QWidget *quick_command;
    QTabWidget *quick_command_tabWidget;
    QWidget *tab_10;
    QGroupBox *get_properties_command_groupBox;
    QPushButton *get_publish_properties_pushButton;
    QPushButton *get_connect_properties_pushButton;
    QPushButton *get_activity_properties_pushButton;
    QPushButton *get_broker_properties_pushButton;
    QPushButton *get_subscribe_properties_pushButton;
    QPushButton *get_pin_mode_properties_pushButton;
    QPushButton *get_all_properties_pushButton;
    QPushButton *get_baudrate_properties_pushButton;
    QPushButton *pin_init_state_pushButton;
    QWidget *tab_11;
    QGroupBox *mqtt_command_groupBox;
    QPushButton *disconnect_command_pushButton;
    QPushButton *connect_command_pushButton;
    QPushButton *subscribe_command_pushButton;
    QPushButton *unsubscribe_command_pushButton;
    QPushButton *publish_command_pushButton;
    QPushButton *ping_command_pushButton;
    QLabel *mqtt_command_subscribe_packet_index_label;
    QComboBox *mqtt_command_subscribe_packet_index_comboBox;
    QWidget *tab_3;
    QLabel *control_pin_14_label;
    QLabel *control_pin_16_label;
    QLabel *control_pin_5_label;
    QLabel *control_pin_13_label;
    QLabel *control_pin_2_label;
    QLabel *control_pin_0_label;
    QLabel *control_pin_15_label;
    QLabel *control_pin_4_label;
    QLabel *control_pin_12_label;
    QPushButton *digital_read_pin_16_pushButton;
    QPushButton *digital_read_pin_5_pushButton;
    QPushButton *digital_read_pin_4_pushButton;
    QPushButton *digital_read_pin_0_pushButton;
    QPushButton *digital_read_pin_2_pushButton;
    QPushButton *digital_read_pin_14_pushButton;
    QPushButton *digital_read_pin_12_pushButton;
    QPushButton *digital_read_pin_13_pushButton;
    QPushButton *digital_read_pin_15_pushButton;
    QCheckBox *digital_write_pin_16_checkBox;
    QPushButton *digital_write_pin_16_pushButton;
    QCheckBox *digital_write_pin_5_checkBox;
    QPushButton *digital_write_pin_5_pushButton;
    QCheckBox *digital_write_pin_4_checkBox;
    QPushButton *digital_write_pin_4_pushButton;
    QCheckBox *digital_write_pin_0_checkBox;
    QPushButton *digital_write_pin_0_pushButton;
    QCheckBox *digital_write_pin_2_checkBox;
    QPushButton *digital_write_pin_2_pushButton;
    QCheckBox *digital_write_pin_14_checkBox;
    QPushButton *digital_write_pin_14_pushButton;
    QCheckBox *digital_write_pin_12_checkBox;
    QPushButton *digital_write_pin_12_pushButton;
    QCheckBox *digital_write_pin_13_checkBox;
    QPushButton *digital_write_pin_13_pushButton;
    QCheckBox *digital_write_pin_15_checkBox;
    QPushButton *digital_write_pin_15_pushButton;
    QLineEdit *analog_write_pin_5_lineEdit;
    QPushButton *analog_write_pin_5_pushButton;
    QLineEdit *analog_write_pin_4_lineEdit;
    QPushButton *analog_write_pin_4_pushButton;
    QLineEdit *analog_write_pin_0_lineEdit;
    QPushButton *analog_write_pin_0_pushButton;
    QLineEdit *analog_write_pin_2_lineEdit;
    QPushButton *analog_write_pin_2_pushButton;
    QLineEdit *analog_write_pin_14_lineEdit;
    QPushButton *analog_write_pin_14_pushButton;
    QLineEdit *analog_write_pin_12_lineEdit;
    QPushButton *analog_write_pin_12_pushButton;
    QLineEdit *analog_write_pin_13_lineEdit;
    QPushButton *analog_write_pin_13_pushButton;
    QLineEdit *analog_write_pin_15_lineEdit;
    QPushButton *analog_write_pin_15_pushButton;
    QLabel *control_pin_A0_label;
    QPushButton *analog_read_pin_A0_pushButton;
    QLineEdit *uart_write_lineEdit;
    QPushButton *uart_write_pushButton;
    QLabel *control_uart_label;
    QCheckBox *response_as_json_checkBox;
    QLabel *response_as_json_label;
    QLabel *control_pin_16_label_3;
    QLabel *label;
    QWidget *on_received_tab;
    QCheckBox *append_content_checkBox;
    QPushButton *file_save_pushButton;
    QPushButton *text_to_setting;
    QLabel *file_path_lable;
    QPushButton *file_load_pushButton;
    QLineEdit *file_path_lineEdit;
    QPushButton *submit_all_pushButton;
    QPushButton *setting_to_text;
    QPlainTextEdit *configuration_data_plainTextEdit;
    QPushButton *device_reboot_pushButton;
    QPushButton *configuration_data_clear_all_pushButton;
    QPushButton *response_to_command_pushButton;
    QMenuBar *menubar;
    QStatusBar *statusbar;

    void setupUi(QMainWindow *ESP_MQTT_Config_Window)
    {
        if (ESP_MQTT_Config_Window->objectName().isEmpty())
            ESP_MQTT_Config_Window->setObjectName(QString::fromUtf8("ESP_MQTT_Config_Window"));
        ESP_MQTT_Config_Window->resize(1198, 710);
        ESP_MQTT_Config_Window->setLayoutDirection(Qt::LeftToRight);
        centralwidget = new QWidget(ESP_MQTT_Config_Window);
        centralwidget->setObjectName(QString::fromUtf8("centralwidget"));
        com_port_groupBox = new QGroupBox(centralwidget);
        com_port_groupBox->setObjectName(QString::fromUtf8("com_port_groupBox"));
        com_port_groupBox->setGeometry(QRect(780, 10, 411, 651));
        QFont font;
        font.setFamily(QString::fromUtf8("MS Shell Dlg 2"));
        com_port_groupBox->setFont(font);
        port_list_comboBox = new QComboBox(com_port_groupBox);
        port_list_comboBox->setObjectName(QString::fromUtf8("port_list_comboBox"));
        port_list_comboBox->setGeometry(QRect(20, 40, 131, 22));
        port_list_comboBox->setFont(font);
        baudrate_comboBox = new QComboBox(com_port_groupBox);
        baudrate_comboBox->addItem(QString());
        baudrate_comboBox->addItem(QString());
        baudrate_comboBox->addItem(QString());
        baudrate_comboBox->addItem(QString());
        baudrate_comboBox->addItem(QString());
        baudrate_comboBox->addItem(QString());
        baudrate_comboBox->addItem(QString());
        baudrate_comboBox->addItem(QString());
        baudrate_comboBox->setObjectName(QString::fromUtf8("baudrate_comboBox"));
        baudrate_comboBox->setEnabled(true);
        baudrate_comboBox->setGeometry(QRect(190, 40, 71, 22));
        baudrate_comboBox->setFont(font);
        port_label = new QLabel(com_port_groupBox);
        port_label->setObjectName(QString::fromUtf8("port_label"));
        port_label->setGeometry(QRect(20, 20, 61, 16));
        port_label->setFont(font);
        baudrate_label = new QLabel(com_port_groupBox);
        baudrate_label->setObjectName(QString::fromUtf8("baudrate_label"));
        baudrate_label->setGeometry(QRect(190, 20, 71, 16));
        baudrate_label->setFont(font);
        connect_pushButton = new QPushButton(com_port_groupBox);
        connect_pushButton->setObjectName(QString::fromUtf8("connect_pushButton"));
        connect_pushButton->setGeometry(QRect(290, 40, 51, 23));
        connect_pushButton->setFont(font);
        close_pushButton = new QPushButton(com_port_groupBox);
        close_pushButton->setObjectName(QString::fromUtf8("close_pushButton"));
        close_pushButton->setGeometry(QRect(350, 40, 51, 23));
        close_pushButton->setFont(font);
        connect_state_label = new QLabel(com_port_groupBox);
        connect_state_label->setObjectName(QString::fromUtf8("connect_state_label"));
        connect_state_label->setGeometry(QRect(290, 20, 71, 16));
        connect_state_label->setFont(font);
        data_from_com_port_plainTextEdit = new QPlainTextEdit(com_port_groupBox);
        data_from_com_port_plainTextEdit->setObjectName(QString::fromUtf8("data_from_com_port_plainTextEdit"));
        data_from_com_port_plainTextEdit->setGeometry(QRect(10, 120, 391, 521));
        QFont font1;
        font1.setFamily(QString::fromUtf8("Calibri"));
        data_from_com_port_plainTextEdit->setFont(font1);
        data_from_comport_auto_scroll_checkBox = new QCheckBox(com_port_groupBox);
        data_from_comport_auto_scroll_checkBox->setObjectName(QString::fromUtf8("data_from_comport_auto_scroll_checkBox"));
        data_from_comport_auto_scroll_checkBox->setGeometry(QRect(20, 90, 101, 17));
        data_from_comport_auto_scroll_checkBox->setFont(font);
        data_from_com_port_clear_all_pushButton = new QPushButton(com_port_groupBox);
        data_from_com_port_clear_all_pushButton->setObjectName(QString::fromUtf8("data_from_com_port_clear_all_pushButton"));
        data_from_com_port_clear_all_pushButton->setGeometry(QRect(290, 90, 111, 23));
        data_from_com_port_clear_all_pushButton->setFont(font);
        mqtt_setting_groupBox = new QGroupBox(centralwidget);
        mqtt_setting_groupBox->setObjectName(QString::fromUtf8("mqtt_setting_groupBox"));
        mqtt_setting_groupBox->setGeometry(QRect(10, 10, 761, 651));
        mqtt_setting_groupBox->setFont(font);
        setting_tabWidget = new QTabWidget(mqtt_setting_groupBox);
        setting_tabWidget->setObjectName(QString::fromUtf8("setting_tabWidget"));
        setting_tabWidget->setEnabled(true);
        setting_tabWidget->setGeometry(QRect(10, 20, 401, 621));
        setting_tabWidget->setFont(font);
        setting_tabWidget->setAutoFillBackground(true);
        start_up_tab = new QWidget();
        start_up_tab->setObjectName(QString::fromUtf8("start_up_tab"));
        groupBox_2 = new QGroupBox(start_up_tab);
        groupBox_2->setObjectName(QString::fromUtf8("groupBox_2"));
        groupBox_2->setGeometry(QRect(10, 10, 321, 81));
        groupBox_2->setFont(font);
        broker_port_lineEdit = new QLineEdit(groupBox_2);
        broker_port_lineEdit->setObjectName(QString::fromUtf8("broker_port_lineEdit"));
        broker_port_lineEdit->setGeometry(QRect(90, 50, 151, 20));
        broker_port_lineEdit->setFont(font);
        broker_port_lineEdit->setReadOnly(false);
        broker_port_lineEdit->setClearButtonEnabled(false);
        broker_port_pushButton = new QPushButton(groupBox_2);
        broker_port_pushButton->setObjectName(QString::fromUtf8("broker_port_pushButton"));
        broker_port_pushButton->setGeometry(QRect(260, 50, 51, 23));
        broker_port_pushButton->setFont(font);
        broker_ip_pushButton = new QPushButton(groupBox_2);
        broker_ip_pushButton->setObjectName(QString::fromUtf8("broker_ip_pushButton"));
        broker_ip_pushButton->setGeometry(QRect(260, 20, 51, 23));
        broker_ip_pushButton->setFont(font);
        broker_ip_lineEdit = new QLineEdit(groupBox_2);
        broker_ip_lineEdit->setObjectName(QString::fromUtf8("broker_ip_lineEdit"));
        broker_ip_lineEdit->setGeometry(QRect(90, 20, 151, 20));
        broker_ip_lineEdit->setFont(font);
        broker_port_label = new QLabel(groupBox_2);
        broker_port_label->setObjectName(QString::fromUtf8("broker_port_label"));
        broker_port_label->setGeometry(QRect(10, 50, 71, 16));
        QFont font2;
        font2.setFamily(QString::fromUtf8("MS Shell Dlg 2"));
        font2.setBold(true);
        font2.setWeight(75);
        broker_port_label->setFont(font2);
        broker_ip_label = new QLabel(groupBox_2);
        broker_ip_label->setObjectName(QString::fromUtf8("broker_ip_label"));
        broker_ip_label->setGeometry(QRect(10, 20, 61, 16));
        broker_ip_label->setFont(font2);
        groupBox_3 = new QGroupBox(start_up_tab);
        groupBox_3->setObjectName(QString::fromUtf8("groupBox_3"));
        groupBox_3->setGeometry(QRect(10, 100, 321, 361));
        groupBox_3->setFont(font);
        protocol_level_label = new QLabel(groupBox_3);
        protocol_level_label->setObjectName(QString::fromUtf8("protocol_level_label"));
        protocol_level_label->setGeometry(QRect(10, 80, 71, 16));
        protocol_level_label->setFont(font);
        will_flag_checkBox = new QCheckBox(groupBox_3);
        will_flag_checkBox->setObjectName(QString::fromUtf8("will_flag_checkBox"));
        will_flag_checkBox->setGeometry(QRect(120, 130, 101, 17));
        will_flag_checkBox->setFont(font);
        will_topic_label = new QLabel(groupBox_3);
        will_topic_label->setObjectName(QString::fromUtf8("will_topic_label"));
        will_topic_label->setGeometry(QRect(10, 240, 61, 16));
        will_topic_label->setFont(font);
        password_pushButton = new QPushButton(groupBox_3);
        password_pushButton->setObjectName(QString::fromUtf8("password_pushButton"));
        password_pushButton->setGeometry(QRect(260, 330, 51, 23));
        password_pushButton->setFont(font);
        user_name_label = new QLabel(groupBox_3);
        user_name_label->setObjectName(QString::fromUtf8("user_name_label"));
        user_name_label->setGeometry(QRect(10, 300, 61, 16));
        user_name_label->setFont(font2);
        clean_session_checkBox = new QCheckBox(groupBox_3);
        clean_session_checkBox->setObjectName(QString::fromUtf8("clean_session_checkBox"));
        clean_session_checkBox->setGeometry(QRect(10, 110, 91, 17));
        clean_session_checkBox->setFont(font);
        clean_session_checkBox->setChecked(false);
        will_message_label = new QLabel(groupBox_3);
        will_message_label->setObjectName(QString::fromUtf8("will_message_label"));
        will_message_label->setGeometry(QRect(10, 270, 71, 16));
        will_message_label->setFont(font);
        user_name_lineEdit = new QLineEdit(groupBox_3);
        user_name_lineEdit->setObjectName(QString::fromUtf8("user_name_lineEdit"));
        user_name_lineEdit->setGeometry(QRect(90, 300, 151, 20));
        user_name_lineEdit->setFont(font);
        password_label = new QLabel(groupBox_3);
        password_label->setObjectName(QString::fromUtf8("password_label"));
        password_label->setGeometry(QRect(10, 330, 61, 16));
        password_label->setFont(font2);
        password_flag_checkBox = new QCheckBox(groupBox_3);
        password_flag_checkBox->setObjectName(QString::fromUtf8("password_flag_checkBox"));
        password_flag_checkBox->setGeometry(QRect(10, 150, 91, 17));
        password_flag_checkBox->setFont(font);
        password_flag_checkBox->setChecked(false);
        password_flag_checkBox->setTristate(false);
        connect_flag_pushButton = new QPushButton(groupBox_3);
        connect_flag_pushButton->setObjectName(QString::fromUtf8("connect_flag_pushButton"));
        connect_flag_pushButton->setGeometry(QRect(260, 110, 51, 61));
        connect_flag_pushButton->setFont(font);
        user_name_pushButton = new QPushButton(groupBox_3);
        user_name_pushButton->setObjectName(QString::fromUtf8("user_name_pushButton"));
        user_name_pushButton->setGeometry(QRect(260, 300, 51, 23));
        user_name_pushButton->setFont(font);
        protocol_name_pushButton = new QPushButton(groupBox_3);
        protocol_name_pushButton->setObjectName(QString::fromUtf8("protocol_name_pushButton"));
        protocol_name_pushButton->setGeometry(QRect(260, 50, 51, 23));
        protocol_name_pushButton->setFont(font);
        will_qos_comboBox = new QComboBox(groupBox_3);
        will_qos_comboBox->addItem(QString());
        will_qos_comboBox->addItem(QString());
        will_qos_comboBox->addItem(QString());
        will_qos_comboBox->setObjectName(QString::fromUtf8("will_qos_comboBox"));
        will_qos_comboBox->setEnabled(true);
        will_qos_comboBox->setGeometry(QRect(120, 150, 41, 16));
        will_qos_comboBox->setFont(font);
        will_topic_lineEdit = new QLineEdit(groupBox_3);
        will_topic_lineEdit->setObjectName(QString::fromUtf8("will_topic_lineEdit"));
        will_topic_lineEdit->setEnabled(true);
        will_topic_lineEdit->setGeometry(QRect(90, 240, 151, 20));
        will_topic_lineEdit->setFont(font);
        protocol_level_pushButton = new QPushButton(groupBox_3);
        protocol_level_pushButton->setObjectName(QString::fromUtf8("protocol_level_pushButton"));
        protocol_level_pushButton->setGeometry(QRect(260, 80, 51, 23));
        protocol_level_pushButton->setFont(font);
        protocol_name_lineEdit = new QLineEdit(groupBox_3);
        protocol_name_lineEdit->setObjectName(QString::fromUtf8("protocol_name_lineEdit"));
        protocol_name_lineEdit->setGeometry(QRect(90, 50, 151, 20));
        protocol_name_lineEdit->setFont(font);
        will_message_lineEdit = new QLineEdit(groupBox_3);
        will_message_lineEdit->setObjectName(QString::fromUtf8("will_message_lineEdit"));
        will_message_lineEdit->setEnabled(true);
        will_message_lineEdit->setGeometry(QRect(90, 270, 151, 20));
        will_message_lineEdit->setFont(font);
        protocol_level_lineEdit = new QLineEdit(groupBox_3);
        protocol_level_lineEdit->setObjectName(QString::fromUtf8("protocol_level_lineEdit"));
        protocol_level_lineEdit->setGeometry(QRect(90, 80, 151, 20));
        protocol_level_lineEdit->setFont(font);
        user_flag_checkBox = new QCheckBox(groupBox_3);
        user_flag_checkBox->setObjectName(QString::fromUtf8("user_flag_checkBox"));
        user_flag_checkBox->setGeometry(QRect(120, 110, 101, 17));
        user_flag_checkBox->setFont(font);
        user_flag_checkBox->setChecked(false);
        password_lineEdit = new QLineEdit(groupBox_3);
        password_lineEdit->setObjectName(QString::fromUtf8("password_lineEdit"));
        password_lineEdit->setGeometry(QRect(90, 330, 101, 20));
        password_lineEdit->setFont(font);
        password_lineEdit->setEchoMode(QLineEdit::Normal);
        protocol_name_label = new QLabel(groupBox_3);
        protocol_name_label->setObjectName(QString::fromUtf8("protocol_name_label"));
        protocol_name_label->setGeometry(QRect(10, 50, 71, 16));
        protocol_name_label->setFont(font);
        will_qos_label = new QLabel(groupBox_3);
        will_qos_label->setObjectName(QString::fromUtf8("will_qos_label"));
        will_qos_label->setGeometry(QRect(170, 150, 51, 16));
        will_qos_label->setFont(font);
        will_message_pushButton = new QPushButton(groupBox_3);
        will_message_pushButton->setObjectName(QString::fromUtf8("will_message_pushButton"));
        will_message_pushButton->setEnabled(true);
        will_message_pushButton->setGeometry(QRect(260, 270, 51, 23));
        will_message_pushButton->setFont(font);
        will_retain_checkBox = new QCheckBox(groupBox_3);
        will_retain_checkBox->setObjectName(QString::fromUtf8("will_retain_checkBox"));
        will_retain_checkBox->setGeometry(QRect(10, 130, 91, 17));
        will_retain_checkBox->setFont(font);
        will_topic_pushButton = new QPushButton(groupBox_3);
        will_topic_pushButton->setObjectName(QString::fromUtf8("will_topic_pushButton"));
        will_topic_pushButton->setEnabled(true);
        will_topic_pushButton->setGeometry(QRect(260, 240, 51, 23));
        will_topic_pushButton->setFont(font);
        keep_alive_label = new QLabel(groupBox_3);
        keep_alive_label->setObjectName(QString::fromUtf8("keep_alive_label"));
        keep_alive_label->setGeometry(QRect(10, 180, 71, 16));
        keep_alive_label->setFont(font);
        keep_alive_pushButton = new QPushButton(groupBox_3);
        keep_alive_pushButton->setObjectName(QString::fromUtf8("keep_alive_pushButton"));
        keep_alive_pushButton->setGeometry(QRect(260, 180, 51, 23));
        keep_alive_pushButton->setFont(font);
        keep_alive_lineEdit = new QLineEdit(groupBox_3);
        keep_alive_lineEdit->setObjectName(QString::fromUtf8("keep_alive_lineEdit"));
        keep_alive_lineEdit->setGeometry(QRect(90, 180, 151, 20));
        keep_alive_lineEdit->setFont(font);
        client_identifier_label = new QLabel(groupBox_3);
        client_identifier_label->setObjectName(QString::fromUtf8("client_identifier_label"));
        client_identifier_label->setGeometry(QRect(10, 210, 81, 16));
        client_identifier_label->setFont(font2);
        client_identifier_lineEdit = new QLineEdit(groupBox_3);
        client_identifier_lineEdit->setObjectName(QString::fromUtf8("client_identifier_lineEdit"));
        client_identifier_lineEdit->setGeometry(QRect(90, 210, 111, 20));
        client_identifier_lineEdit->setFont(font);
        client_identifier_pushButton = new QPushButton(groupBox_3);
        client_identifier_pushButton->setObjectName(QString::fromUtf8("client_identifier_pushButton"));
        client_identifier_pushButton->setGeometry(QRect(260, 210, 51, 23));
        client_identifier_pushButton->setFont(font);
        start_up_general_setting_checkBox = new QCheckBox(groupBox_3);
        start_up_general_setting_checkBox->setObjectName(QString::fromUtf8("start_up_general_setting_checkBox"));
        start_up_general_setting_checkBox->setGeometry(QRect(10, 20, 101, 17));
        start_up_general_setting_checkBox->setFont(font);
        start_up_general_setting_checkBox->setChecked(false);
        general_setting_without_authentication_checkBox = new QCheckBox(groupBox_3);
        general_setting_without_authentication_checkBox->setObjectName(QString::fromUtf8("general_setting_without_authentication_checkBox"));
        general_setting_without_authentication_checkBox->setGeometry(QRect(110, 20, 141, 17));
        general_setting_without_authentication_checkBox->setFont(font);
        general_setting_without_authentication_checkBox->setChecked(false);
        generate_random_id_pushButton = new QPushButton(groupBox_3);
        generate_random_id_pushButton->setObjectName(QString::fromUtf8("generate_random_id_pushButton"));
        generate_random_id_pushButton->setGeometry(QRect(210, 210, 31, 23));
        generate_random_id_pushButton->setFont(font);
        show_password_checkBox = new QCheckBox(groupBox_3);
        show_password_checkBox->setObjectName(QString::fromUtf8("show_password_checkBox"));
        show_password_checkBox->setGeometry(QRect(200, 330, 16, 17));
        show_password_checkBox->setFont(font);
        show_password_checkBox->setChecked(false);
        password_label_2 = new QLabel(groupBox_3);
        password_label_2->setObjectName(QString::fromUtf8("password_label_2"));
        password_label_2->setGeometry(QRect(220, 330, 21, 16));
        QFont font3;
        font3.setFamily(QString::fromUtf8("MS Shell Dlg 2"));
        font3.setBold(false);
        font3.setWeight(50);
        password_label_2->setFont(font3);
        groupBox_4 = new QGroupBox(start_up_tab);
        groupBox_4->setObjectName(QString::fromUtf8("groupBox_4"));
        groupBox_4->setGeometry(QRect(10, 470, 321, 81));
        groupBox_4->setFont(font);
        max_qos_label = new QLabel(groupBox_4);
        max_qos_label->setObjectName(QString::fromUtf8("max_qos_label"));
        max_qos_label->setGeometry(QRect(140, 20, 51, 16));
        max_qos_label->setFont(font);
        max_qos_pushButton = new QPushButton(groupBox_4);
        max_qos_pushButton->setObjectName(QString::fromUtf8("max_qos_pushButton"));
        max_qos_pushButton->setGeometry(QRect(260, 20, 51, 23));
        max_qos_pushButton->setFont(font);
        max_qos_comboBox = new QComboBox(groupBox_4);
        max_qos_comboBox->addItem(QString());
        max_qos_comboBox->addItem(QString());
        max_qos_comboBox->addItem(QString());
        max_qos_comboBox->setObjectName(QString::fromUtf8("max_qos_comboBox"));
        max_qos_comboBox->setGeometry(QRect(190, 20, 51, 22));
        max_qos_comboBox->setFont(font);
        topic_filter_label = new QLabel(groupBox_4);
        topic_filter_label->setObjectName(QString::fromUtf8("topic_filter_label"));
        topic_filter_label->setGeometry(QRect(10, 50, 61, 16));
        topic_filter_label->setFont(font2);
        topic_filter_lineEdit = new QLineEdit(groupBox_4);
        topic_filter_lineEdit->setObjectName(QString::fromUtf8("topic_filter_lineEdit"));
        topic_filter_lineEdit->setGeometry(QRect(80, 50, 161, 20));
        topic_filter_lineEdit->setFont(font);
        topic_filter_pushButton = new QPushButton(groupBox_4);
        topic_filter_pushButton->setObjectName(QString::fromUtf8("topic_filter_pushButton"));
        topic_filter_pushButton->setGeometry(QRect(260, 50, 51, 23));
        topic_filter_pushButton->setFont(font);
        subscribe_packet_index_label = new QLabel(groupBox_4);
        subscribe_packet_index_label->setObjectName(QString::fromUtf8("subscribe_packet_index_label"));
        subscribe_packet_index_label->setGeometry(QRect(10, 20, 51, 16));
        subscribe_packet_index_label->setFont(font);
        subscribe_packet_index_lineEdit = new QLineEdit(groupBox_4);
        subscribe_packet_index_lineEdit->setObjectName(QString::fromUtf8("subscribe_packet_index_lineEdit"));
        subscribe_packet_index_lineEdit->setGeometry(QRect(80, 20, 41, 20));
        subscribe_packet_index_lineEdit->setFont(font);
        broker_info_setting_to_text = new QPushButton(start_up_tab);
        broker_info_setting_to_text->setObjectName(QString::fromUtf8("broker_info_setting_to_text"));
        broker_info_setting_to_text->setGeometry(QRect(340, 40, 31, 23));
        broker_info_setting_to_text->setFont(font);
        connect_packet_setting_to_text = new QPushButton(start_up_tab);
        connect_packet_setting_to_text->setObjectName(QString::fromUtf8("connect_packet_setting_to_text"));
        connect_packet_setting_to_text->setGeometry(QRect(340, 260, 31, 23));
        connect_packet_setting_to_text->setFont(font);
        subscribe_packet_setting_to_text_3 = new QPushButton(start_up_tab);
        subscribe_packet_setting_to_text_3->setObjectName(QString::fromUtf8("subscribe_packet_setting_to_text_3"));
        subscribe_packet_setting_to_text_3->setGeometry(QRect(340, 500, 31, 23));
        subscribe_packet_setting_to_text_3->setFont(font);
        setting_tabWidget->addTab(start_up_tab, QString());
        groupBox_4->raise();
        groupBox_3->raise();
        groupBox_2->raise();
        broker_info_setting_to_text->raise();
        connect_packet_setting_to_text->raise();
        subscribe_packet_setting_to_text_3->raise();
        publish_tab = new QWidget();
        publish_tab->setObjectName(QString::fromUtf8("publish_tab"));
        publish_general_setting_checkBox = new QCheckBox(publish_tab);
        publish_general_setting_checkBox->setObjectName(QString::fromUtf8("publish_general_setting_checkBox"));
        publish_general_setting_checkBox->setGeometry(QRect(10, 10, 101, 17));
        publish_general_setting_checkBox->setFont(font);
        groupBox_5 = new QGroupBox(publish_tab);
        groupBox_5->setObjectName(QString::fromUtf8("groupBox_5"));
        groupBox_5->setGeometry(QRect(10, 30, 321, 201));
        groupBox_5->setFont(font);
        application_message_plainTextEdit = new QPlainTextEdit(groupBox_5);
        application_message_plainTextEdit->setObjectName(QString::fromUtf8("application_message_plainTextEdit"));
        application_message_plainTextEdit->setGeometry(QRect(90, 120, 151, 71));
        application_message_plainTextEdit->setFont(font);
        retain_checkBox = new QCheckBox(groupBox_5);
        retain_checkBox->setObjectName(QString::fromUtf8("retain_checkBox"));
        retain_checkBox->setGeometry(QRect(10, 20, 91, 17));
        retain_checkBox->setFont(font);
        application_message_label = new QLabel(groupBox_5);
        application_message_label->setObjectName(QString::fromUtf8("application_message_label"));
        application_message_label->setGeometry(QRect(10, 120, 71, 31));
        application_message_label->setFont(font);
        topic_name_lineEdit = new QLineEdit(groupBox_5);
        topic_name_lineEdit->setObjectName(QString::fromUtf8("topic_name_lineEdit"));
        topic_name_lineEdit->setGeometry(QRect(90, 90, 151, 20));
        topic_name_lineEdit->setFont(font);
        topic_name_pushButton = new QPushButton(groupBox_5);
        topic_name_pushButton->setObjectName(QString::fromUtf8("topic_name_pushButton"));
        topic_name_pushButton->setGeometry(QRect(260, 90, 51, 23));
        topic_name_pushButton->setFont(font);
        message_builder_pushButton = new QPushButton(groupBox_5);
        message_builder_pushButton->setObjectName(QString::fromUtf8("message_builder_pushButton"));
        message_builder_pushButton->setGeometry(QRect(250, 150, 61, 41));
        message_builder_pushButton->setFont(font);
        topic_name_label = new QLabel(groupBox_5);
        topic_name_label->setObjectName(QString::fromUtf8("topic_name_label"));
        topic_name_label->setGeometry(QRect(10, 90, 71, 16));
        topic_name_label->setFont(font2);
        dup_flag_checkBox = new QCheckBox(groupBox_5);
        dup_flag_checkBox->setObjectName(QString::fromUtf8("dup_flag_checkBox"));
        dup_flag_checkBox->setGeometry(QRect(10, 40, 70, 17));
        dup_flag_checkBox->setFont(font);
        qos_level_comboBox = new QComboBox(groupBox_5);
        qos_level_comboBox->addItem(QString());
        qos_level_comboBox->addItem(QString());
        qos_level_comboBox->addItem(QString());
        qos_level_comboBox->setObjectName(QString::fromUtf8("qos_level_comboBox"));
        qos_level_comboBox->setGeometry(QRect(190, 20, 51, 22));
        qos_level_comboBox->setFont(font);
        publish_flag_pushButton = new QPushButton(groupBox_5);
        publish_flag_pushButton->setObjectName(QString::fromUtf8("publish_flag_pushButton"));
        publish_flag_pushButton->setGeometry(QRect(260, 20, 51, 41));
        publish_flag_pushButton->setFont(font);
        qos_level_label = new QLabel(groupBox_5);
        qos_level_label->setObjectName(QString::fromUtf8("qos_level_label"));
        qos_level_label->setGeometry(QRect(130, 20, 51, 16));
        qos_level_label->setFont(font);
        application_message_pushButton = new QPushButton(groupBox_5);
        application_message_pushButton->setObjectName(QString::fromUtf8("application_message_pushButton"));
        application_message_pushButton->setGeometry(QRect(260, 120, 51, 21));
        application_message_pushButton->setFont(font);
        application_message_clear_all_pushButton = new QPushButton(groupBox_5);
        application_message_clear_all_pushButton->setObjectName(QString::fromUtf8("application_message_clear_all_pushButton"));
        application_message_clear_all_pushButton->setGeometry(QRect(10, 170, 61, 21));
        application_message_clear_all_pushButton->setFont(font);
        groupBox_6 = new QGroupBox(publish_tab);
        groupBox_6->setObjectName(QString::fromUtf8("groupBox_6"));
        groupBox_6->setGeometry(QRect(10, 240, 321, 321));
        groupBox_6->setFont(font);
        uart_trigger_sign_pushButton = new QPushButton(groupBox_6);
        uart_trigger_sign_pushButton->setObjectName(QString::fromUtf8("uart_trigger_sign_pushButton"));
        uart_trigger_sign_pushButton->setGeometry(QRect(260, 140, 51, 23));
        uart_trigger_sign_pushButton->setFont(font);
        continous_interval_lineEdit = new QLineEdit(groupBox_6);
        continous_interval_lineEdit->setObjectName(QString::fromUtf8("continous_interval_lineEdit"));
        continous_interval_lineEdit->setGeometry(QRect(160, 50, 81, 20));
        continous_interval_lineEdit->setFont(font);
        continous_interval_pushButton = new QPushButton(groupBox_6);
        continous_interval_pushButton->setObjectName(QString::fromUtf8("continous_interval_pushButton"));
        continous_interval_pushButton->setGeometry(QRect(260, 50, 51, 23));
        continous_interval_pushButton->setFont(font);
        uart_trigger_sign_label = new QLabel(groupBox_6);
        uart_trigger_sign_label->setObjectName(QString::fromUtf8("uart_trigger_sign_label"));
        uart_trigger_sign_label->setGeometry(QRect(10, 140, 91, 16));
        uart_trigger_sign_label->setFont(font);
        publish_mode_comboBox = new QComboBox(groupBox_6);
        publish_mode_comboBox->addItem(QString());
        publish_mode_comboBox->addItem(QString());
        publish_mode_comboBox->setObjectName(QString::fromUtf8("publish_mode_comboBox"));
        publish_mode_comboBox->setGeometry(QRect(160, 20, 81, 22));
        publish_mode_comboBox->setFont(font);
        trigger_type_comboBox = new QComboBox(groupBox_6);
        trigger_type_comboBox->addItem(QString());
        trigger_type_comboBox->addItem(QString());
        trigger_type_comboBox->addItem(QString());
        trigger_type_comboBox->setObjectName(QString::fromUtf8("trigger_type_comboBox"));
        trigger_type_comboBox->setGeometry(QRect(130, 80, 111, 22));
        trigger_type_comboBox->setFont(font);
        trigger_type_pushButton = new QPushButton(groupBox_6);
        trigger_type_pushButton->setObjectName(QString::fromUtf8("trigger_type_pushButton"));
        trigger_type_pushButton->setGeometry(QRect(260, 80, 51, 23));
        trigger_type_pushButton->setFont(font);
        push_mode_pushButton = new QPushButton(groupBox_6);
        push_mode_pushButton->setObjectName(QString::fromUtf8("push_mode_pushButton"));
        push_mode_pushButton->setGeometry(QRect(260, 20, 51, 23));
        push_mode_pushButton->setFont(font);
        trigger_pin_label = new QLabel(groupBox_6);
        trigger_pin_label->setObjectName(QString::fromUtf8("trigger_pin_label"));
        trigger_pin_label->setGeometry(QRect(10, 110, 71, 16));
        trigger_pin_label->setFont(font);
        continous_interval_label = new QLabel(groupBox_6);
        continous_interval_label->setObjectName(QString::fromUtf8("continous_interval_label"));
        continous_interval_label->setGeometry(QRect(10, 40, 121, 31));
        continous_interval_label->setFont(font);
        push_mode_label = new QLabel(groupBox_6);
        push_mode_label->setObjectName(QString::fromUtf8("push_mode_label"));
        push_mode_label->setGeometry(QRect(10, 20, 71, 16));
        push_mode_label->setFont(font);
        uart_trigger_sign_lineEdit = new QLineEdit(groupBox_6);
        uart_trigger_sign_lineEdit->setObjectName(QString::fromUtf8("uart_trigger_sign_lineEdit"));
        uart_trigger_sign_lineEdit->setGeometry(QRect(160, 140, 81, 20));
        uart_trigger_sign_lineEdit->setFont(font);
        trigger_type_label = new QLabel(groupBox_6);
        trigger_type_label->setObjectName(QString::fromUtf8("trigger_type_label"));
        trigger_type_label->setGeometry(QRect(10, 70, 71, 31));
        trigger_type_label->setFont(font);
        trigger_pin_pushButton = new QPushButton(groupBox_6);
        trigger_pin_pushButton->setObjectName(QString::fromUtf8("trigger_pin_pushButton"));
        trigger_pin_pushButton->setGeometry(QRect(260, 110, 51, 23));
        trigger_pin_pushButton->setFont(font);
        trigger_pin_comboBox = new QComboBox(groupBox_6);
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->addItem(QString());
        trigger_pin_comboBox->setObjectName(QString::fromUtf8("trigger_pin_comboBox"));
        trigger_pin_comboBox->setGeometry(QRect(200, 110, 41, 22));
        trigger_pin_comboBox->setFont(font);
        id_filter_label = new QLabel(groupBox_6);
        id_filter_label->setObjectName(QString::fromUtf8("id_filter_label"));
        id_filter_label->setGeometry(QRect(10, 170, 171, 16));
        id_filter_label->setFont(font);
        id_filter_checkBox = new QCheckBox(groupBox_6);
        id_filter_checkBox->setObjectName(QString::fromUtf8("id_filter_checkBox"));
        id_filter_checkBox->setGeometry(QRect(220, 170, 21, 17));
        id_filter_checkBox->setFont(font);
        id_filter_pushButton = new QPushButton(groupBox_6);
        id_filter_pushButton->setObjectName(QString::fromUtf8("id_filter_pushButton"));
        id_filter_pushButton->setGeometry(QRect(260, 170, 51, 23));
        id_filter_pushButton->setFont(font);
        response_enable_pushButton = new QPushButton(groupBox_6);
        response_enable_pushButton->setObjectName(QString::fromUtf8("response_enable_pushButton"));
        response_enable_pushButton->setGeometry(QRect(260, 200, 51, 23));
        response_enable_pushButton->setFont(font);
        response_enable_label = new QLabel(groupBox_6);
        response_enable_label->setObjectName(QString::fromUtf8("response_enable_label"));
        response_enable_label->setGeometry(QRect(10, 200, 171, 16));
        response_enable_label->setFont(font);
        response_enable_checkBox = new QCheckBox(groupBox_6);
        response_enable_checkBox->setObjectName(QString::fromUtf8("response_enable_checkBox"));
        response_enable_checkBox->setGeometry(QRect(220, 200, 21, 17));
        response_enable_checkBox->setFont(font);
        print_mqtt_event_pushButton = new QPushButton(groupBox_6);
        print_mqtt_event_pushButton->setObjectName(QString::fromUtf8("print_mqtt_event_pushButton"));
        print_mqtt_event_pushButton->setGeometry(QRect(260, 230, 51, 23));
        print_mqtt_event_pushButton->setFont(font);
        print_mqtt_event_checkBox = new QCheckBox(groupBox_6);
        print_mqtt_event_checkBox->setObjectName(QString::fromUtf8("print_mqtt_event_checkBox"));
        print_mqtt_event_checkBox->setGeometry(QRect(220, 230, 21, 17));
        print_mqtt_event_checkBox->setFont(font);
        print_mqtt_event_label = new QLabel(groupBox_6);
        print_mqtt_event_label->setObjectName(QString::fromUtf8("print_mqtt_event_label"));
        print_mqtt_event_label->setGeometry(QRect(10, 230, 141, 16));
        print_mqtt_event_label->setFont(font);
        print_mqtt_message_label = new QLabel(groupBox_6);
        print_mqtt_message_label->setObjectName(QString::fromUtf8("print_mqtt_message_label"));
        print_mqtt_message_label->setGeometry(QRect(10, 260, 151, 16));
        print_mqtt_message_label->setFont(font);
        print_mqtt_message_pushButton = new QPushButton(groupBox_6);
        print_mqtt_message_pushButton->setObjectName(QString::fromUtf8("print_mqtt_message_pushButton"));
        print_mqtt_message_pushButton->setGeometry(QRect(260, 260, 51, 23));
        print_mqtt_message_pushButton->setFont(font);
        publish_data_from_serial_pushButton = new QPushButton(groupBox_6);
        publish_data_from_serial_pushButton->setObjectName(QString::fromUtf8("publish_data_from_serial_pushButton"));
        publish_data_from_serial_pushButton->setGeometry(QRect(260, 290, 51, 23));
        publish_data_from_serial_pushButton->setFont(font);
        publish_data_from_serial_label = new QLabel(groupBox_6);
        publish_data_from_serial_label->setObjectName(QString::fromUtf8("publish_data_from_serial_label"));
        publish_data_from_serial_label->setGeometry(QRect(10, 290, 101, 16));
        publish_data_from_serial_label->setFont(font);
        mqtt_message_as_label = new QLabel(groupBox_6);
        mqtt_message_as_label->setObjectName(QString::fromUtf8("mqtt_message_as_label"));
        mqtt_message_as_label->setGeometry(QRect(140, 260, 16, 16));
        mqtt_message_as_label->setFont(font);
        mqtt_message_type_comboBox = new QComboBox(groupBox_6);
        mqtt_message_type_comboBox->addItem(QString());
        mqtt_message_type_comboBox->addItem(QString());
        mqtt_message_type_comboBox->addItem(QString());
        mqtt_message_type_comboBox->addItem(QString());
        mqtt_message_type_comboBox->setObjectName(QString::fromUtf8("mqtt_message_type_comboBox"));
        mqtt_message_type_comboBox->setGeometry(QRect(160, 260, 81, 22));
        mqtt_message_type_comboBox->setFont(font);
        serial_message_type_comboBox = new QComboBox(groupBox_6);
        serial_message_type_comboBox->addItem(QString());
        serial_message_type_comboBox->addItem(QString());
        serial_message_type_comboBox->addItem(QString());
        serial_message_type_comboBox->addItem(QString());
        serial_message_type_comboBox->addItem(QString());
        serial_message_type_comboBox->setObjectName(QString::fromUtf8("serial_message_type_comboBox"));
        serial_message_type_comboBox->setGeometry(QRect(160, 290, 81, 22));
        serial_message_type_comboBox->setFont(font);
        publish_data_from_serial_as_label = new QLabel(groupBox_6);
        publish_data_from_serial_as_label->setObjectName(QString::fromUtf8("publish_data_from_serial_as_label"));
        publish_data_from_serial_as_label->setGeometry(QRect(140, 290, 16, 16));
        publish_data_from_serial_as_label->setFont(font);
        publish_packet_setting_to_text = new QPushButton(publish_tab);
        publish_packet_setting_to_text->setObjectName(QString::fromUtf8("publish_packet_setting_to_text"));
        publish_packet_setting_to_text->setGeometry(QRect(350, 160, 31, 23));
        publish_packet_setting_to_text->setFont(font);
        activity_config_setting_to_text = new QPushButton(publish_tab);
        activity_config_setting_to_text->setObjectName(QString::fromUtf8("activity_config_setting_to_text"));
        activity_config_setting_to_text->setGeometry(QRect(350, 370, 31, 23));
        activity_config_setting_to_text->setFont(font);
        setting_tabWidget->addTab(publish_tab, QString());
        groupBox_5->raise();
        groupBox_6->raise();
        publish_general_setting_checkBox->raise();
        publish_packet_setting_to_text->raise();
        activity_config_setting_to_text->raise();
        hardware_tab = new QWidget();
        hardware_tab->setObjectName(QString::fromUtf8("hardware_tab"));
        hardware_tabWidget = new QTabWidget(hardware_tab);
        hardware_tabWidget->setObjectName(QString::fromUtf8("hardware_tabWidget"));
        hardware_tabWidget->setGeometry(QRect(10, 10, 381, 531));
        gpio_tab = new QWidget();
        gpio_tab->setObjectName(QString::fromUtf8("gpio_tab"));
        pin_5_comboBox = new QComboBox(gpio_tab);
        pin_5_comboBox->addItem(QString());
        pin_5_comboBox->addItem(QString());
        pin_5_comboBox->addItem(QString());
        pin_5_comboBox->setObjectName(QString::fromUtf8("pin_5_comboBox"));
        pin_5_comboBox->setGeometry(QRect(70, 40, 211, 22));
        pin_14_pushButton = new QPushButton(gpio_tab);
        pin_14_pushButton->setObjectName(QString::fromUtf8("pin_14_pushButton"));
        pin_14_pushButton->setGeometry(QRect(300, 160, 51, 23));
        pin_5_pushButton = new QPushButton(gpio_tab);
        pin_5_pushButton->setObjectName(QString::fromUtf8("pin_5_pushButton"));
        pin_5_pushButton->setGeometry(QRect(300, 40, 51, 23));
        pin_15_label = new QLabel(gpio_tab);
        pin_15_label->setObjectName(QString::fromUtf8("pin_15_label"));
        pin_15_label->setGeometry(QRect(10, 250, 51, 21));
        QFont font4;
        font4.setFamily(QString::fromUtf8("MS Shell Dlg 2"));
        font4.setPointSize(10);
        font4.setBold(false);
        font4.setWeight(50);
        pin_15_label->setFont(font4);
        pin_16_comboBox = new QComboBox(gpio_tab);
        pin_16_comboBox->addItem(QString());
        pin_16_comboBox->addItem(QString());
        pin_16_comboBox->addItem(QString());
        pin_16_comboBox->setObjectName(QString::fromUtf8("pin_16_comboBox"));
        pin_16_comboBox->setGeometry(QRect(70, 10, 211, 22));
        pin_2_label = new QLabel(gpio_tab);
        pin_2_label->setObjectName(QString::fromUtf8("pin_2_label"));
        pin_2_label->setGeometry(QRect(10, 130, 41, 21));
        pin_2_label->setFont(font4);
        pin_13_comboBox = new QComboBox(gpio_tab);
        pin_13_comboBox->addItem(QString());
        pin_13_comboBox->addItem(QString());
        pin_13_comboBox->addItem(QString());
        pin_13_comboBox->setObjectName(QString::fromUtf8("pin_13_comboBox"));
        pin_13_comboBox->setGeometry(QRect(70, 220, 211, 22));
        pin_2_pushButton = new QPushButton(gpio_tab);
        pin_2_pushButton->setObjectName(QString::fromUtf8("pin_2_pushButton"));
        pin_2_pushButton->setGeometry(QRect(300, 130, 51, 23));
        pin_5_label = new QLabel(gpio_tab);
        pin_5_label->setObjectName(QString::fromUtf8("pin_5_label"));
        pin_5_label->setGeometry(QRect(10, 40, 41, 21));
        pin_5_label->setFont(font4);
        pin_0_pushButton = new QPushButton(gpio_tab);
        pin_0_pushButton->setObjectName(QString::fromUtf8("pin_0_pushButton"));
        pin_0_pushButton->setGeometry(QRect(300, 100, 51, 23));
        pin_15_pushButton = new QPushButton(gpio_tab);
        pin_15_pushButton->setObjectName(QString::fromUtf8("pin_15_pushButton"));
        pin_15_pushButton->setGeometry(QRect(300, 250, 51, 23));
        pin_4_pushButton = new QPushButton(gpio_tab);
        pin_4_pushButton->setObjectName(QString::fromUtf8("pin_4_pushButton"));
        pin_4_pushButton->setGeometry(QRect(300, 70, 51, 23));
        pin_0_comboBox = new QComboBox(gpio_tab);
        pin_0_comboBox->addItem(QString());
        pin_0_comboBox->addItem(QString());
        pin_0_comboBox->addItem(QString());
        pin_0_comboBox->setObjectName(QString::fromUtf8("pin_0_comboBox"));
        pin_0_comboBox->setGeometry(QRect(70, 100, 211, 22));
        pin_13_pushButton = new QPushButton(gpio_tab);
        pin_13_pushButton->setObjectName(QString::fromUtf8("pin_13_pushButton"));
        pin_13_pushButton->setGeometry(QRect(300, 220, 51, 23));
        pin_0_label = new QLabel(gpio_tab);
        pin_0_label->setObjectName(QString::fromUtf8("pin_0_label"));
        pin_0_label->setGeometry(QRect(10, 100, 41, 21));
        pin_0_label->setFont(font4);
        pin_14_label = new QLabel(gpio_tab);
        pin_14_label->setObjectName(QString::fromUtf8("pin_14_label"));
        pin_14_label->setGeometry(QRect(10, 160, 51, 21));
        pin_14_label->setFont(font4);
        pin_16_label = new QLabel(gpio_tab);
        pin_16_label->setObjectName(QString::fromUtf8("pin_16_label"));
        pin_16_label->setGeometry(QRect(10, 10, 51, 21));
        pin_16_label->setFont(font4);
        pin_4_comboBox = new QComboBox(gpio_tab);
        pin_4_comboBox->addItem(QString());
        pin_4_comboBox->addItem(QString());
        pin_4_comboBox->addItem(QString());
        pin_4_comboBox->setObjectName(QString::fromUtf8("pin_4_comboBox"));
        pin_4_comboBox->setGeometry(QRect(70, 70, 211, 22));
        pin_14_comboBox = new QComboBox(gpio_tab);
        pin_14_comboBox->addItem(QString());
        pin_14_comboBox->addItem(QString());
        pin_14_comboBox->addItem(QString());
        pin_14_comboBox->setObjectName(QString::fromUtf8("pin_14_comboBox"));
        pin_14_comboBox->setGeometry(QRect(70, 160, 211, 22));
        pin_12_label = new QLabel(gpio_tab);
        pin_12_label->setObjectName(QString::fromUtf8("pin_12_label"));
        pin_12_label->setGeometry(QRect(10, 190, 51, 21));
        pin_12_label->setFont(font4);
        pin_4_label = new QLabel(gpio_tab);
        pin_4_label->setObjectName(QString::fromUtf8("pin_4_label"));
        pin_4_label->setGeometry(QRect(10, 70, 41, 21));
        pin_4_label->setFont(font4);
        pin_12_comboBox = new QComboBox(gpio_tab);
        pin_12_comboBox->addItem(QString());
        pin_12_comboBox->addItem(QString());
        pin_12_comboBox->addItem(QString());
        pin_12_comboBox->setObjectName(QString::fromUtf8("pin_12_comboBox"));
        pin_12_comboBox->setGeometry(QRect(70, 190, 211, 22));
        pin_12_pushButton = new QPushButton(gpio_tab);
        pin_12_pushButton->setObjectName(QString::fromUtf8("pin_12_pushButton"));
        pin_12_pushButton->setGeometry(QRect(300, 190, 51, 23));
        pin_2_comboBox = new QComboBox(gpio_tab);
        pin_2_comboBox->addItem(QString());
        pin_2_comboBox->addItem(QString());
        pin_2_comboBox->addItem(QString());
        pin_2_comboBox->setObjectName(QString::fromUtf8("pin_2_comboBox"));
        pin_2_comboBox->setGeometry(QRect(70, 130, 211, 22));
        pin_16_pushButton = new QPushButton(gpio_tab);
        pin_16_pushButton->setObjectName(QString::fromUtf8("pin_16_pushButton"));
        pin_16_pushButton->setGeometry(QRect(300, 10, 51, 23));
        pin_13_label = new QLabel(gpio_tab);
        pin_13_label->setObjectName(QString::fromUtf8("pin_13_label"));
        pin_13_label->setGeometry(QRect(10, 220, 51, 21));
        pin_13_label->setFont(font4);
        pin_15_comboBox = new QComboBox(gpio_tab);
        pin_15_comboBox->addItem(QString());
        pin_15_comboBox->addItem(QString());
        pin_15_comboBox->addItem(QString());
        pin_15_comboBox->setObjectName(QString::fromUtf8("pin_15_comboBox"));
        pin_15_comboBox->setGeometry(QRect(70, 250, 211, 22));
        groupBox = new QGroupBox(gpio_tab);
        groupBox->setObjectName(QString::fromUtf8("groupBox"));
        groupBox->setGeometry(QRect(10, 330, 361, 171));
        pin_0_label_2 = new QLabel(groupBox);
        pin_0_label_2->setObjectName(QString::fromUtf8("pin_0_label_2"));
        pin_0_label_2->setGeometry(QRect(10, 110, 51, 21));
        pin_0_label_2->setFont(font4);
        pin_4_init_state_pushButton = new QPushButton(groupBox);
        pin_4_init_state_pushButton->setObjectName(QString::fromUtf8("pin_4_init_state_pushButton"));
        pin_4_init_state_pushButton->setGeometry(QRect(120, 80, 41, 23));
        pin_14_init_state_pushButton = new QPushButton(groupBox);
        pin_14_init_state_pushButton->setObjectName(QString::fromUtf8("pin_14_init_state_pushButton"));
        pin_14_init_state_pushButton->setGeometry(QRect(300, 20, 41, 23));
        pin_4_label_2 = new QLabel(groupBox);
        pin_4_label_2->setObjectName(QString::fromUtf8("pin_4_label_2"));
        pin_4_label_2->setGeometry(QRect(10, 80, 51, 21));
        pin_4_label_2->setFont(font4);
        pin_16_init_state_pushButton = new QPushButton(groupBox);
        pin_16_init_state_pushButton->setObjectName(QString::fromUtf8("pin_16_init_state_pushButton"));
        pin_16_init_state_pushButton->setGeometry(QRect(120, 20, 41, 23));
        pin_13_init_state_pushButton = new QPushButton(groupBox);
        pin_13_init_state_pushButton->setObjectName(QString::fromUtf8("pin_13_init_state_pushButton"));
        pin_13_init_state_pushButton->setGeometry(QRect(300, 80, 41, 23));
        pin_12_init_state_pushButton = new QPushButton(groupBox);
        pin_12_init_state_pushButton->setObjectName(QString::fromUtf8("pin_12_init_state_pushButton"));
        pin_12_init_state_pushButton->setGeometry(QRect(300, 50, 41, 23));
        pin_13_label_2 = new QLabel(groupBox);
        pin_13_label_2->setObjectName(QString::fromUtf8("pin_13_label_2"));
        pin_13_label_2->setGeometry(QRect(190, 80, 51, 21));
        pin_13_label_2->setFont(font4);
        pin_16_init_state_comboBox = new QComboBox(groupBox);
        pin_16_init_state_comboBox->addItem(QString());
        pin_16_init_state_comboBox->addItem(QString());
        pin_16_init_state_comboBox->addItem(QString());
        pin_16_init_state_comboBox->setObjectName(QString::fromUtf8("pin_16_init_state_comboBox"));
        pin_16_init_state_comboBox->setEnabled(false);
        pin_16_init_state_comboBox->setGeometry(QRect(60, 20, 51, 22));
        pin_15_init_state_pushButton = new QPushButton(groupBox);
        pin_15_init_state_pushButton->setObjectName(QString::fromUtf8("pin_15_init_state_pushButton"));
        pin_15_init_state_pushButton->setGeometry(QRect(300, 110, 41, 23));
        pin_14_label_2 = new QLabel(groupBox);
        pin_14_label_2->setObjectName(QString::fromUtf8("pin_14_label_2"));
        pin_14_label_2->setGeometry(QRect(190, 20, 51, 21));
        pin_14_label_2->setFont(font4);
        pin_15_label_2 = new QLabel(groupBox);
        pin_15_label_2->setObjectName(QString::fromUtf8("pin_15_label_2"));
        pin_15_label_2->setGeometry(QRect(190, 110, 51, 21));
        pin_15_label_2->setFont(font4);
        pin_5_label_2 = new QLabel(groupBox);
        pin_5_label_2->setObjectName(QString::fromUtf8("pin_5_label_2"));
        pin_5_label_2->setGeometry(QRect(10, 50, 51, 21));
        pin_5_label_2->setFont(font4);
        pin_0_init_state_pushButton = new QPushButton(groupBox);
        pin_0_init_state_pushButton->setObjectName(QString::fromUtf8("pin_0_init_state_pushButton"));
        pin_0_init_state_pushButton->setGeometry(QRect(120, 110, 41, 23));
        pin_16_label_2 = new QLabel(groupBox);
        pin_16_label_2->setObjectName(QString::fromUtf8("pin_16_label_2"));
        pin_16_label_2->setGeometry(QRect(10, 20, 51, 21));
        pin_16_label_2->setFont(font4);
        pin_12_label_2 = new QLabel(groupBox);
        pin_12_label_2->setObjectName(QString::fromUtf8("pin_12_label_2"));
        pin_12_label_2->setGeometry(QRect(190, 50, 51, 21));
        pin_12_label_2->setFont(font4);
        pin_5_init_state_pushButton = new QPushButton(groupBox);
        pin_5_init_state_pushButton->setObjectName(QString::fromUtf8("pin_5_init_state_pushButton"));
        pin_5_init_state_pushButton->setGeometry(QRect(120, 50, 41, 23));
        pin_2_init_state_pushButton = new QPushButton(groupBox);
        pin_2_init_state_pushButton->setObjectName(QString::fromUtf8("pin_2_init_state_pushButton"));
        pin_2_init_state_pushButton->setGeometry(QRect(120, 140, 41, 23));
        pin_2_label_2 = new QLabel(groupBox);
        pin_2_label_2->setObjectName(QString::fromUtf8("pin_2_label_2"));
        pin_2_label_2->setGeometry(QRect(10, 140, 51, 21));
        pin_2_label_2->setFont(font4);
        set_all_to_0_pushButton = new QPushButton(groupBox);
        set_all_to_0_pushButton->setObjectName(QString::fromUtf8("set_all_to_0_pushButton"));
        set_all_to_0_pushButton->setGeometry(QRect(190, 140, 51, 21));
        QFont font5;
        font5.setFamily(QString::fromUtf8("MS Shell Dlg 2"));
        font5.setPointSize(8);
        set_all_to_0_pushButton->setFont(font5);
        set_all_to_1_pushButton = new QPushButton(groupBox);
        set_all_to_1_pushButton->setObjectName(QString::fromUtf8("set_all_to_1_pushButton"));
        set_all_to_1_pushButton->setGeometry(QRect(240, 140, 51, 21));
        set_all_to_1_pushButton->setFont(font5);
        set_all_to_old_pushButton = new QPushButton(groupBox);
        set_all_to_old_pushButton->setObjectName(QString::fromUtf8("set_all_to_old_pushButton"));
        set_all_to_old_pushButton->setGeometry(QRect(290, 140, 51, 21));
        set_all_to_old_pushButton->setFont(font5);
        pin_5_init_state_comboBox = new QComboBox(groupBox);
        pin_5_init_state_comboBox->addItem(QString());
        pin_5_init_state_comboBox->addItem(QString());
        pin_5_init_state_comboBox->addItem(QString());
        pin_5_init_state_comboBox->setObjectName(QString::fromUtf8("pin_5_init_state_comboBox"));
        pin_5_init_state_comboBox->setEnabled(false);
        pin_5_init_state_comboBox->setGeometry(QRect(60, 50, 51, 22));
        pin_4_init_state_comboBox = new QComboBox(groupBox);
        pin_4_init_state_comboBox->addItem(QString());
        pin_4_init_state_comboBox->addItem(QString());
        pin_4_init_state_comboBox->addItem(QString());
        pin_4_init_state_comboBox->setObjectName(QString::fromUtf8("pin_4_init_state_comboBox"));
        pin_4_init_state_comboBox->setEnabled(false);
        pin_4_init_state_comboBox->setGeometry(QRect(60, 80, 51, 22));
        pin_0_init_state_comboBox = new QComboBox(groupBox);
        pin_0_init_state_comboBox->addItem(QString());
        pin_0_init_state_comboBox->addItem(QString());
        pin_0_init_state_comboBox->addItem(QString());
        pin_0_init_state_comboBox->setObjectName(QString::fromUtf8("pin_0_init_state_comboBox"));
        pin_0_init_state_comboBox->setEnabled(false);
        pin_0_init_state_comboBox->setGeometry(QRect(60, 110, 51, 22));
        pin_14_init_state_comboBox = new QComboBox(groupBox);
        pin_14_init_state_comboBox->addItem(QString());
        pin_14_init_state_comboBox->addItem(QString());
        pin_14_init_state_comboBox->addItem(QString());
        pin_14_init_state_comboBox->setObjectName(QString::fromUtf8("pin_14_init_state_comboBox"));
        pin_14_init_state_comboBox->setEnabled(false);
        pin_14_init_state_comboBox->setGeometry(QRect(240, 20, 51, 22));
        pin_12_init_state_comboBox = new QComboBox(groupBox);
        pin_12_init_state_comboBox->addItem(QString());
        pin_12_init_state_comboBox->addItem(QString());
        pin_12_init_state_comboBox->addItem(QString());
        pin_12_init_state_comboBox->setObjectName(QString::fromUtf8("pin_12_init_state_comboBox"));
        pin_12_init_state_comboBox->setEnabled(false);
        pin_12_init_state_comboBox->setGeometry(QRect(240, 50, 51, 22));
        pin_13_init_state_comboBox = new QComboBox(groupBox);
        pin_13_init_state_comboBox->addItem(QString());
        pin_13_init_state_comboBox->addItem(QString());
        pin_13_init_state_comboBox->addItem(QString());
        pin_13_init_state_comboBox->setObjectName(QString::fromUtf8("pin_13_init_state_comboBox"));
        pin_13_init_state_comboBox->setEnabled(false);
        pin_13_init_state_comboBox->setGeometry(QRect(240, 80, 51, 22));
        pin_15_init_state_comboBox = new QComboBox(groupBox);
        pin_15_init_state_comboBox->addItem(QString());
        pin_15_init_state_comboBox->addItem(QString());
        pin_15_init_state_comboBox->addItem(QString());
        pin_15_init_state_comboBox->setObjectName(QString::fromUtf8("pin_15_init_state_comboBox"));
        pin_15_init_state_comboBox->setEnabled(false);
        pin_15_init_state_comboBox->setGeometry(QRect(240, 110, 51, 22));
        pin_2_init_state_comboBox = new QComboBox(groupBox);
        pin_2_init_state_comboBox->addItem(QString());
        pin_2_init_state_comboBox->addItem(QString());
        pin_2_init_state_comboBox->addItem(QString());
        pin_2_init_state_comboBox->setObjectName(QString::fromUtf8("pin_2_init_state_comboBox"));
        pin_2_init_state_comboBox->setEnabled(false);
        pin_2_init_state_comboBox->setGeometry(QRect(60, 140, 51, 22));
        all_to_input_pushButton = new QPushButton(gpio_tab);
        all_to_input_pushButton->setObjectName(QString::fromUtf8("all_to_input_pushButton"));
        all_to_input_pushButton->setGeometry(QRect(10, 280, 71, 31));
        all_to_input_pushButton->setFont(font5);
        all_to_input_pullup_pushButton = new QPushButton(gpio_tab);
        all_to_input_pullup_pushButton->setObjectName(QString::fromUtf8("all_to_input_pullup_pushButton"));
        all_to_input_pullup_pushButton->setGeometry(QRect(110, 280, 131, 31));
        all_to_input_pullup_pushButton->setFont(font5);
        all_to_output_pushButton = new QPushButton(gpio_tab);
        all_to_output_pushButton->setObjectName(QString::fromUtf8("all_to_output_pushButton"));
        all_to_output_pushButton->setGeometry(QRect(270, 280, 81, 31));
        all_to_output_pushButton->setFont(font5);
        hardware_tabWidget->addTab(gpio_tab, QString());
        serial_tab = new QWidget();
        serial_tab->setObjectName(QString::fromUtf8("serial_tab"));
        setting_baudrate_comboBox = new QComboBox(serial_tab);
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->addItem(QString());
        setting_baudrate_comboBox->setObjectName(QString::fromUtf8("setting_baudrate_comboBox"));
        setting_baudrate_comboBox->setEnabled(true);
        setting_baudrate_comboBox->setGeometry(QRect(80, 10, 71, 22));
        setting_baudrate_label = new QLabel(serial_tab);
        setting_baudrate_label->setObjectName(QString::fromUtf8("setting_baudrate_label"));
        setting_baudrate_label->setGeometry(QRect(10, 10, 51, 16));
        setting_baudrate_pushButton = new QPushButton(serial_tab);
        setting_baudrate_pushButton->setObjectName(QString::fromUtf8("setting_baudrate_pushButton"));
        setting_baudrate_pushButton->setGeometry(QRect(170, 10, 51, 23));
        hardware_tabWidget->addTab(serial_tab, QString());
        setting_tabWidget->addTab(hardware_tab, QString());
        quick_command = new QWidget();
        quick_command->setObjectName(QString::fromUtf8("quick_command"));
        quick_command_tabWidget = new QTabWidget(quick_command);
        quick_command_tabWidget->setObjectName(QString::fromUtf8("quick_command_tabWidget"));
        quick_command_tabWidget->setGeometry(QRect(10, 10, 381, 571));
        tab_10 = new QWidget();
        tab_10->setObjectName(QString::fromUtf8("tab_10"));
        get_properties_command_groupBox = new QGroupBox(tab_10);
        get_properties_command_groupBox->setObjectName(QString::fromUtf8("get_properties_command_groupBox"));
        get_properties_command_groupBox->setGeometry(QRect(10, 10, 341, 301));
        get_publish_properties_pushButton = new QPushButton(get_properties_command_groupBox);
        get_publish_properties_pushButton->setObjectName(QString::fromUtf8("get_publish_properties_pushButton"));
        get_publish_properties_pushButton->setGeometry(QRect(190, 130, 131, 31));
        get_connect_properties_pushButton = new QPushButton(get_properties_command_groupBox);
        get_connect_properties_pushButton->setObjectName(QString::fromUtf8("get_connect_properties_pushButton"));
        get_connect_properties_pushButton->setGeometry(QRect(190, 30, 131, 31));
        get_activity_properties_pushButton = new QPushButton(get_properties_command_groupBox);
        get_activity_properties_pushButton->setObjectName(QString::fromUtf8("get_activity_properties_pushButton"));
        get_activity_properties_pushButton->setGeometry(QRect(30, 80, 131, 31));
        get_broker_properties_pushButton = new QPushButton(get_properties_command_groupBox);
        get_broker_properties_pushButton->setObjectName(QString::fromUtf8("get_broker_properties_pushButton"));
        get_broker_properties_pushButton->setGeometry(QRect(30, 30, 131, 31));
        get_subscribe_properties_pushButton = new QPushButton(get_properties_command_groupBox);
        get_subscribe_properties_pushButton->setObjectName(QString::fromUtf8("get_subscribe_properties_pushButton"));
        get_subscribe_properties_pushButton->setGeometry(QRect(190, 80, 131, 31));
        get_pin_mode_properties_pushButton = new QPushButton(get_properties_command_groupBox);
        get_pin_mode_properties_pushButton->setObjectName(QString::fromUtf8("get_pin_mode_properties_pushButton"));
        get_pin_mode_properties_pushButton->setGeometry(QRect(30, 130, 131, 31));
        get_all_properties_pushButton = new QPushButton(get_properties_command_groupBox);
        get_all_properties_pushButton->setObjectName(QString::fromUtf8("get_all_properties_pushButton"));
        get_all_properties_pushButton->setGeometry(QRect(110, 230, 131, 41));
        get_all_properties_pushButton->setFont(font5);
        get_baudrate_properties_pushButton = new QPushButton(get_properties_command_groupBox);
        get_baudrate_properties_pushButton->setObjectName(QString::fromUtf8("get_baudrate_properties_pushButton"));
        get_baudrate_properties_pushButton->setGeometry(QRect(30, 180, 131, 31));
        pin_init_state_pushButton = new QPushButton(get_properties_command_groupBox);
        pin_init_state_pushButton->setObjectName(QString::fromUtf8("pin_init_state_pushButton"));
        pin_init_state_pushButton->setGeometry(QRect(190, 180, 131, 31));
        quick_command_tabWidget->addTab(tab_10, QString());
        tab_11 = new QWidget();
        tab_11->setObjectName(QString::fromUtf8("tab_11"));
        mqtt_command_groupBox = new QGroupBox(tab_11);
        mqtt_command_groupBox->setObjectName(QString::fromUtf8("mqtt_command_groupBox"));
        mqtt_command_groupBox->setGeometry(QRect(10, 20, 361, 181));
        disconnect_command_pushButton = new QPushButton(mqtt_command_groupBox);
        disconnect_command_pushButton->setObjectName(QString::fromUtf8("disconnect_command_pushButton"));
        disconnect_command_pushButton->setGeometry(QRect(230, 30, 121, 31));
        disconnect_command_pushButton->setFont(font5);
        connect_command_pushButton = new QPushButton(mqtt_command_groupBox);
        connect_command_pushButton->setObjectName(QString::fromUtf8("connect_command_pushButton"));
        connect_command_pushButton->setGeometry(QRect(20, 30, 121, 31));
        connect_command_pushButton->setFont(font5);
        subscribe_command_pushButton = new QPushButton(mqtt_command_groupBox);
        subscribe_command_pushButton->setObjectName(QString::fromUtf8("subscribe_command_pushButton"));
        subscribe_command_pushButton->setGeometry(QRect(20, 80, 121, 31));
        subscribe_command_pushButton->setFont(font5);
        unsubscribe_command_pushButton = new QPushButton(mqtt_command_groupBox);
        unsubscribe_command_pushButton->setObjectName(QString::fromUtf8("unsubscribe_command_pushButton"));
        unsubscribe_command_pushButton->setGeometry(QRect(230, 80, 121, 31));
        unsubscribe_command_pushButton->setFont(font5);
        publish_command_pushButton = new QPushButton(mqtt_command_groupBox);
        publish_command_pushButton->setObjectName(QString::fromUtf8("publish_command_pushButton"));
        publish_command_pushButton->setGeometry(QRect(20, 130, 121, 31));
        publish_command_pushButton->setFont(font5);
        ping_command_pushButton = new QPushButton(mqtt_command_groupBox);
        ping_command_pushButton->setObjectName(QString::fromUtf8("ping_command_pushButton"));
        ping_command_pushButton->setGeometry(QRect(230, 130, 121, 31));
        ping_command_pushButton->setFont(font5);
        mqtt_command_subscribe_packet_index_label = new QLabel(mqtt_command_groupBox);
        mqtt_command_subscribe_packet_index_label->setObjectName(QString::fromUtf8("mqtt_command_subscribe_packet_index_label"));
        mqtt_command_subscribe_packet_index_label->setGeometry(QRect(150, 80, 31, 16));
        mqtt_command_subscribe_packet_index_comboBox = new QComboBox(mqtt_command_groupBox);
        mqtt_command_subscribe_packet_index_comboBox->addItem(QString());
        mqtt_command_subscribe_packet_index_comboBox->addItem(QString());
        mqtt_command_subscribe_packet_index_comboBox->addItem(QString());
        mqtt_command_subscribe_packet_index_comboBox->addItem(QString());
        mqtt_command_subscribe_packet_index_comboBox->addItem(QString());
        mqtt_command_subscribe_packet_index_comboBox->addItem(QString());
        mqtt_command_subscribe_packet_index_comboBox->setObjectName(QString::fromUtf8("mqtt_command_subscribe_packet_index_comboBox"));
        mqtt_command_subscribe_packet_index_comboBox->setGeometry(QRect(180, 82, 41, 21));
        connect_command_pushButton->raise();
        subscribe_command_pushButton->raise();
        unsubscribe_command_pushButton->raise();
        publish_command_pushButton->raise();
        ping_command_pushButton->raise();
        disconnect_command_pushButton->raise();
        mqtt_command_subscribe_packet_index_label->raise();
        mqtt_command_subscribe_packet_index_comboBox->raise();
        quick_command_tabWidget->addTab(tab_11, QString());
        tab_3 = new QWidget();
        tab_3->setObjectName(QString::fromUtf8("tab_3"));
        control_pin_14_label = new QLabel(tab_3);
        control_pin_14_label->setObjectName(QString::fromUtf8("control_pin_14_label"));
        control_pin_14_label->setGeometry(QRect(10, 160, 51, 21));
        control_pin_14_label->setFont(font4);
        control_pin_16_label = new QLabel(tab_3);
        control_pin_16_label->setObjectName(QString::fromUtf8("control_pin_16_label"));
        control_pin_16_label->setGeometry(QRect(10, 10, 51, 21));
        control_pin_16_label->setFont(font4);
        control_pin_5_label = new QLabel(tab_3);
        control_pin_5_label->setObjectName(QString::fromUtf8("control_pin_5_label"));
        control_pin_5_label->setGeometry(QRect(10, 40, 51, 21));
        control_pin_5_label->setFont(font4);
        control_pin_13_label = new QLabel(tab_3);
        control_pin_13_label->setObjectName(QString::fromUtf8("control_pin_13_label"));
        control_pin_13_label->setGeometry(QRect(10, 220, 51, 21));
        control_pin_13_label->setFont(font4);
        control_pin_2_label = new QLabel(tab_3);
        control_pin_2_label->setObjectName(QString::fromUtf8("control_pin_2_label"));
        control_pin_2_label->setGeometry(QRect(10, 130, 51, 21));
        control_pin_2_label->setFont(font4);
        control_pin_0_label = new QLabel(tab_3);
        control_pin_0_label->setObjectName(QString::fromUtf8("control_pin_0_label"));
        control_pin_0_label->setGeometry(QRect(10, 100, 51, 21));
        control_pin_0_label->setFont(font4);
        control_pin_15_label = new QLabel(tab_3);
        control_pin_15_label->setObjectName(QString::fromUtf8("control_pin_15_label"));
        control_pin_15_label->setGeometry(QRect(10, 250, 51, 21));
        control_pin_15_label->setFont(font4);
        control_pin_4_label = new QLabel(tab_3);
        control_pin_4_label->setObjectName(QString::fromUtf8("control_pin_4_label"));
        control_pin_4_label->setGeometry(QRect(10, 70, 51, 21));
        control_pin_4_label->setFont(font4);
        control_pin_12_label = new QLabel(tab_3);
        control_pin_12_label->setObjectName(QString::fromUtf8("control_pin_12_label"));
        control_pin_12_label->setGeometry(QRect(10, 190, 51, 21));
        control_pin_12_label->setFont(font4);
        digital_read_pin_16_pushButton = new QPushButton(tab_3);
        digital_read_pin_16_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_16_pushButton"));
        digital_read_pin_16_pushButton->setGeometry(QRect(60, 10, 75, 23));
        digital_read_pin_5_pushButton = new QPushButton(tab_3);
        digital_read_pin_5_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_5_pushButton"));
        digital_read_pin_5_pushButton->setGeometry(QRect(60, 40, 75, 23));
        digital_read_pin_4_pushButton = new QPushButton(tab_3);
        digital_read_pin_4_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_4_pushButton"));
        digital_read_pin_4_pushButton->setGeometry(QRect(60, 70, 75, 23));
        digital_read_pin_0_pushButton = new QPushButton(tab_3);
        digital_read_pin_0_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_0_pushButton"));
        digital_read_pin_0_pushButton->setGeometry(QRect(60, 100, 75, 23));
        digital_read_pin_2_pushButton = new QPushButton(tab_3);
        digital_read_pin_2_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_2_pushButton"));
        digital_read_pin_2_pushButton->setGeometry(QRect(60, 130, 75, 23));
        digital_read_pin_14_pushButton = new QPushButton(tab_3);
        digital_read_pin_14_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_14_pushButton"));
        digital_read_pin_14_pushButton->setGeometry(QRect(60, 160, 75, 23));
        digital_read_pin_12_pushButton = new QPushButton(tab_3);
        digital_read_pin_12_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_12_pushButton"));
        digital_read_pin_12_pushButton->setGeometry(QRect(60, 190, 75, 23));
        digital_read_pin_13_pushButton = new QPushButton(tab_3);
        digital_read_pin_13_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_13_pushButton"));
        digital_read_pin_13_pushButton->setGeometry(QRect(60, 220, 75, 23));
        digital_read_pin_15_pushButton = new QPushButton(tab_3);
        digital_read_pin_15_pushButton->setObjectName(QString::fromUtf8("digital_read_pin_15_pushButton"));
        digital_read_pin_15_pushButton->setGeometry(QRect(60, 250, 75, 23));
        digital_write_pin_16_checkBox = new QCheckBox(tab_3);
        digital_write_pin_16_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_16_checkBox"));
        digital_write_pin_16_checkBox->setGeometry(QRect(150, 10, 16, 17));
        digital_write_pin_16_pushButton = new QPushButton(tab_3);
        digital_write_pin_16_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_16_pushButton"));
        digital_write_pin_16_pushButton->setGeometry(QRect(170, 10, 75, 23));
        digital_write_pin_5_checkBox = new QCheckBox(tab_3);
        digital_write_pin_5_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_5_checkBox"));
        digital_write_pin_5_checkBox->setGeometry(QRect(150, 40, 16, 17));
        digital_write_pin_5_pushButton = new QPushButton(tab_3);
        digital_write_pin_5_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_5_pushButton"));
        digital_write_pin_5_pushButton->setGeometry(QRect(170, 40, 75, 23));
        digital_write_pin_4_checkBox = new QCheckBox(tab_3);
        digital_write_pin_4_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_4_checkBox"));
        digital_write_pin_4_checkBox->setGeometry(QRect(150, 70, 16, 17));
        digital_write_pin_4_pushButton = new QPushButton(tab_3);
        digital_write_pin_4_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_4_pushButton"));
        digital_write_pin_4_pushButton->setGeometry(QRect(170, 70, 75, 23));
        digital_write_pin_0_checkBox = new QCheckBox(tab_3);
        digital_write_pin_0_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_0_checkBox"));
        digital_write_pin_0_checkBox->setGeometry(QRect(150, 100, 16, 17));
        digital_write_pin_0_pushButton = new QPushButton(tab_3);
        digital_write_pin_0_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_0_pushButton"));
        digital_write_pin_0_pushButton->setGeometry(QRect(170, 100, 75, 23));
        digital_write_pin_2_checkBox = new QCheckBox(tab_3);
        digital_write_pin_2_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_2_checkBox"));
        digital_write_pin_2_checkBox->setGeometry(QRect(150, 130, 16, 17));
        digital_write_pin_2_pushButton = new QPushButton(tab_3);
        digital_write_pin_2_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_2_pushButton"));
        digital_write_pin_2_pushButton->setGeometry(QRect(170, 130, 75, 23));
        digital_write_pin_14_checkBox = new QCheckBox(tab_3);
        digital_write_pin_14_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_14_checkBox"));
        digital_write_pin_14_checkBox->setGeometry(QRect(150, 160, 16, 17));
        digital_write_pin_14_pushButton = new QPushButton(tab_3);
        digital_write_pin_14_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_14_pushButton"));
        digital_write_pin_14_pushButton->setGeometry(QRect(170, 160, 75, 23));
        digital_write_pin_12_checkBox = new QCheckBox(tab_3);
        digital_write_pin_12_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_12_checkBox"));
        digital_write_pin_12_checkBox->setGeometry(QRect(150, 190, 16, 17));
        digital_write_pin_12_pushButton = new QPushButton(tab_3);
        digital_write_pin_12_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_12_pushButton"));
        digital_write_pin_12_pushButton->setGeometry(QRect(170, 190, 75, 23));
        digital_write_pin_13_checkBox = new QCheckBox(tab_3);
        digital_write_pin_13_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_13_checkBox"));
        digital_write_pin_13_checkBox->setGeometry(QRect(150, 220, 16, 17));
        digital_write_pin_13_pushButton = new QPushButton(tab_3);
        digital_write_pin_13_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_13_pushButton"));
        digital_write_pin_13_pushButton->setGeometry(QRect(170, 220, 75, 23));
        digital_write_pin_15_checkBox = new QCheckBox(tab_3);
        digital_write_pin_15_checkBox->setObjectName(QString::fromUtf8("digital_write_pin_15_checkBox"));
        digital_write_pin_15_checkBox->setGeometry(QRect(150, 250, 16, 17));
        digital_write_pin_15_pushButton = new QPushButton(tab_3);
        digital_write_pin_15_pushButton->setObjectName(QString::fromUtf8("digital_write_pin_15_pushButton"));
        digital_write_pin_15_pushButton->setGeometry(QRect(170, 250, 75, 23));
        analog_write_pin_5_lineEdit = new QLineEdit(tab_3);
        analog_write_pin_5_lineEdit->setObjectName(QString::fromUtf8("analog_write_pin_5_lineEdit"));
        analog_write_pin_5_lineEdit->setGeometry(QRect(260, 40, 31, 21));
        analog_write_pin_5_pushButton = new QPushButton(tab_3);
        analog_write_pin_5_pushButton->setObjectName(QString::fromUtf8("analog_write_pin_5_pushButton"));
        analog_write_pin_5_pushButton->setGeometry(QRect(300, 40, 71, 23));
        analog_write_pin_4_lineEdit = new QLineEdit(tab_3);
        analog_write_pin_4_lineEdit->setObjectName(QString::fromUtf8("analog_write_pin_4_lineEdit"));
        analog_write_pin_4_lineEdit->setGeometry(QRect(260, 70, 31, 21));
        analog_write_pin_4_pushButton = new QPushButton(tab_3);
        analog_write_pin_4_pushButton->setObjectName(QString::fromUtf8("analog_write_pin_4_pushButton"));
        analog_write_pin_4_pushButton->setGeometry(QRect(300, 70, 71, 23));
        analog_write_pin_0_lineEdit = new QLineEdit(tab_3);
        analog_write_pin_0_lineEdit->setObjectName(QString::fromUtf8("analog_write_pin_0_lineEdit"));
        analog_write_pin_0_lineEdit->setGeometry(QRect(260, 100, 31, 21));
        analog_write_pin_0_pushButton = new QPushButton(tab_3);
        analog_write_pin_0_pushButton->setObjectName(QString::fromUtf8("analog_write_pin_0_pushButton"));
        analog_write_pin_0_pushButton->setGeometry(QRect(300, 100, 71, 23));
        analog_write_pin_2_lineEdit = new QLineEdit(tab_3);
        analog_write_pin_2_lineEdit->setObjectName(QString::fromUtf8("analog_write_pin_2_lineEdit"));
        analog_write_pin_2_lineEdit->setGeometry(QRect(260, 130, 31, 21));
        analog_write_pin_2_pushButton = new QPushButton(tab_3);
        analog_write_pin_2_pushButton->setObjectName(QString::fromUtf8("analog_write_pin_2_pushButton"));
        analog_write_pin_2_pushButton->setGeometry(QRect(300, 130, 71, 23));
        analog_write_pin_14_lineEdit = new QLineEdit(tab_3);
        analog_write_pin_14_lineEdit->setObjectName(QString::fromUtf8("analog_write_pin_14_lineEdit"));
        analog_write_pin_14_lineEdit->setGeometry(QRect(260, 160, 31, 21));
        analog_write_pin_14_pushButton = new QPushButton(tab_3);
        analog_write_pin_14_pushButton->setObjectName(QString::fromUtf8("analog_write_pin_14_pushButton"));
        analog_write_pin_14_pushButton->setGeometry(QRect(300, 160, 71, 23));
        analog_write_pin_12_lineEdit = new QLineEdit(tab_3);
        analog_write_pin_12_lineEdit->setObjectName(QString::fromUtf8("analog_write_pin_12_lineEdit"));
        analog_write_pin_12_lineEdit->setGeometry(QRect(260, 190, 31, 21));
        analog_write_pin_12_pushButton = new QPushButton(tab_3);
        analog_write_pin_12_pushButton->setObjectName(QString::fromUtf8("analog_write_pin_12_pushButton"));
        analog_write_pin_12_pushButton->setGeometry(QRect(300, 190, 71, 23));
        analog_write_pin_13_lineEdit = new QLineEdit(tab_3);
        analog_write_pin_13_lineEdit->setObjectName(QString::fromUtf8("analog_write_pin_13_lineEdit"));
        analog_write_pin_13_lineEdit->setGeometry(QRect(260, 220, 31, 21));
        analog_write_pin_13_pushButton = new QPushButton(tab_3);
        analog_write_pin_13_pushButton->setObjectName(QString::fromUtf8("analog_write_pin_13_pushButton"));
        analog_write_pin_13_pushButton->setGeometry(QRect(300, 220, 71, 23));
        analog_write_pin_15_lineEdit = new QLineEdit(tab_3);
        analog_write_pin_15_lineEdit->setObjectName(QString::fromUtf8("analog_write_pin_15_lineEdit"));
        analog_write_pin_15_lineEdit->setGeometry(QRect(260, 250, 31, 21));
        analog_write_pin_15_pushButton = new QPushButton(tab_3);
        analog_write_pin_15_pushButton->setObjectName(QString::fromUtf8("analog_write_pin_15_pushButton"));
        analog_write_pin_15_pushButton->setGeometry(QRect(300, 250, 71, 23));
        control_pin_A0_label = new QLabel(tab_3);
        control_pin_A0_label->setObjectName(QString::fromUtf8("control_pin_A0_label"));
        control_pin_A0_label->setGeometry(QRect(10, 280, 51, 21));
        control_pin_A0_label->setFont(font4);
        analog_read_pin_A0_pushButton = new QPushButton(tab_3);
        analog_read_pin_A0_pushButton->setObjectName(QString::fromUtf8("analog_read_pin_A0_pushButton"));
        analog_read_pin_A0_pushButton->setGeometry(QRect(60, 280, 75, 23));
        uart_write_lineEdit = new QLineEdit(tab_3);
        uart_write_lineEdit->setObjectName(QString::fromUtf8("uart_write_lineEdit"));
        uart_write_lineEdit->setGeometry(QRect(60, 340, 231, 21));
        uart_write_pushButton = new QPushButton(tab_3);
        uart_write_pushButton->setObjectName(QString::fromUtf8("uart_write_pushButton"));
        uart_write_pushButton->setGeometry(QRect(300, 340, 71, 23));
        control_uart_label = new QLabel(tab_3);
        control_uart_label->setObjectName(QString::fromUtf8("control_uart_label"));
        control_uart_label->setGeometry(QRect(10, 340, 41, 21));
        control_uart_label->setFont(font4);
        response_as_json_checkBox = new QCheckBox(tab_3);
        response_as_json_checkBox->setObjectName(QString::fromUtf8("response_as_json_checkBox"));
        response_as_json_checkBox->setGeometry(QRect(120, 310, 20, 21));
        response_as_json_label = new QLabel(tab_3);
        response_as_json_label->setObjectName(QString::fromUtf8("response_as_json_label"));
        response_as_json_label->setGeometry(QRect(10, 310, 101, 21));
        response_as_json_label->setFont(font4);
        control_pin_16_label_3 = new QLabel(tab_3);
        control_pin_16_label_3->setObjectName(QString::fromUtf8("control_pin_16_label_3"));
        control_pin_16_label_3->setGeometry(QRect(260, 10, 111, 21));
        QFont font6;
        font6.setFamily(QString::fromUtf8("MS Shell Dlg 2"));
        font6.setPointSize(8);
        font6.setBold(false);
        font6.setWeight(50);
        control_pin_16_label_3->setFont(font6);
        label = new QLabel(tab_3);
        label->setObjectName(QString::fromUtf8("label"));
        label->setGeometry(QRect(0, 370, 381, 181));
        label->setPixmap(QPixmap(QString::fromUtf8(":/NodeMCU_pinout.png")));
        label->setScaledContents(true);
        quick_command_tabWidget->addTab(tab_3, QString());
        setting_tabWidget->addTab(quick_command, QString());
        on_received_tab = new QWidget();
        on_received_tab->setObjectName(QString::fromUtf8("on_received_tab"));
        setting_tabWidget->addTab(on_received_tab, QString());
        append_content_checkBox = new QCheckBox(mqtt_setting_groupBox);
        append_content_checkBox->setObjectName(QString::fromUtf8("append_content_checkBox"));
        append_content_checkBox->setGeometry(QRect(460, 110, 101, 17));
        append_content_checkBox->setFont(font);
        file_save_pushButton = new QPushButton(mqtt_setting_groupBox);
        file_save_pushButton->setObjectName(QString::fromUtf8("file_save_pushButton"));
        file_save_pushButton->setGeometry(QRect(680, 70, 71, 23));
        file_save_pushButton->setFont(font);
        text_to_setting = new QPushButton(mqtt_setting_groupBox);
        text_to_setting->setObjectName(QString::fromUtf8("text_to_setting"));
        text_to_setting->setGeometry(QRect(420, 340, 31, 23));
        text_to_setting->setFont(font);
        file_path_lable = new QLabel(mqtt_setting_groupBox);
        file_path_lable->setObjectName(QString::fromUtf8("file_path_lable"));
        file_path_lable->setGeometry(QRect(460, 40, 47, 13));
        file_path_lable->setFont(font);
        file_load_pushButton = new QPushButton(mqtt_setting_groupBox);
        file_load_pushButton->setObjectName(QString::fromUtf8("file_load_pushButton"));
        file_load_pushButton->setGeometry(QRect(510, 70, 71, 23));
        file_load_pushButton->setFont(font);
        file_path_lineEdit = new QLineEdit(mqtt_setting_groupBox);
        file_path_lineEdit->setObjectName(QString::fromUtf8("file_path_lineEdit"));
        file_path_lineEdit->setGeometry(QRect(510, 40, 241, 20));
        file_path_lineEdit->setFont(font);
        submit_all_pushButton = new QPushButton(mqtt_setting_groupBox);
        submit_all_pushButton->setObjectName(QString::fromUtf8("submit_all_pushButton"));
        submit_all_pushButton->setGeometry(QRect(460, 610, 191, 31));
        submit_all_pushButton->setFont(font5);
        setting_to_text = new QPushButton(mqtt_setting_groupBox);
        setting_to_text->setObjectName(QString::fromUtf8("setting_to_text"));
        setting_to_text->setGeometry(QRect(420, 310, 31, 23));
        setting_to_text->setFont(font);
        configuration_data_plainTextEdit = new QPlainTextEdit(mqtt_setting_groupBox);
        configuration_data_plainTextEdit->setObjectName(QString::fromUtf8("configuration_data_plainTextEdit"));
        configuration_data_plainTextEdit->setGeometry(QRect(460, 140, 291, 461));
        configuration_data_plainTextEdit->setFont(font1);
        device_reboot_pushButton = new QPushButton(mqtt_setting_groupBox);
        device_reboot_pushButton->setObjectName(QString::fromUtf8("device_reboot_pushButton"));
        device_reboot_pushButton->setGeometry(QRect(670, 610, 81, 31));
        device_reboot_pushButton->setFont(font5);
        configuration_data_clear_all_pushButton = new QPushButton(mqtt_setting_groupBox);
        configuration_data_clear_all_pushButton->setObjectName(QString::fromUtf8("configuration_data_clear_all_pushButton"));
        configuration_data_clear_all_pushButton->setGeometry(QRect(680, 110, 71, 23));
        configuration_data_clear_all_pushButton->setFont(font);
        response_to_command_pushButton = new QPushButton(mqtt_setting_groupBox);
        response_to_command_pushButton->setObjectName(QString::fromUtf8("response_to_command_pushButton"));
        response_to_command_pushButton->setGeometry(QRect(590, 110, 71, 23));
        response_to_command_pushButton->setFont(font);
        ESP_MQTT_Config_Window->setCentralWidget(centralwidget);
        mqtt_setting_groupBox->raise();
        com_port_groupBox->raise();
        menubar = new QMenuBar(ESP_MQTT_Config_Window);
        menubar->setObjectName(QString::fromUtf8("menubar"));
        menubar->setGeometry(QRect(0, 0, 1198, 20));
        ESP_MQTT_Config_Window->setMenuBar(menubar);
        statusbar = new QStatusBar(ESP_MQTT_Config_Window);
        statusbar->setObjectName(QString::fromUtf8("statusbar"));
        ESP_MQTT_Config_Window->setStatusBar(statusbar);
        QWidget::setTabOrder(setting_tabWidget, broker_ip_lineEdit);
        QWidget::setTabOrder(broker_ip_lineEdit, broker_ip_pushButton);
        QWidget::setTabOrder(broker_ip_pushButton, broker_info_setting_to_text);
        QWidget::setTabOrder(broker_info_setting_to_text, broker_port_lineEdit);
        QWidget::setTabOrder(broker_port_lineEdit, broker_port_pushButton);
        QWidget::setTabOrder(broker_port_pushButton, start_up_general_setting_checkBox);
        QWidget::setTabOrder(start_up_general_setting_checkBox, general_setting_without_authentication_checkBox);
        QWidget::setTabOrder(general_setting_without_authentication_checkBox, protocol_name_lineEdit);
        QWidget::setTabOrder(protocol_name_lineEdit, protocol_name_pushButton);
        QWidget::setTabOrder(protocol_name_pushButton, protocol_level_lineEdit);
        QWidget::setTabOrder(protocol_level_lineEdit, protocol_level_pushButton);
        QWidget::setTabOrder(protocol_level_pushButton, clean_session_checkBox);
        QWidget::setTabOrder(clean_session_checkBox, user_flag_checkBox);
        QWidget::setTabOrder(user_flag_checkBox, will_retain_checkBox);
        QWidget::setTabOrder(will_retain_checkBox, will_flag_checkBox);
        QWidget::setTabOrder(will_flag_checkBox, password_flag_checkBox);
        QWidget::setTabOrder(password_flag_checkBox, will_qos_comboBox);
        QWidget::setTabOrder(will_qos_comboBox, connect_flag_pushButton);
        QWidget::setTabOrder(connect_flag_pushButton, keep_alive_lineEdit);
        QWidget::setTabOrder(keep_alive_lineEdit, keep_alive_pushButton);
        QWidget::setTabOrder(keep_alive_pushButton, client_identifier_lineEdit);
        QWidget::setTabOrder(client_identifier_lineEdit, generate_random_id_pushButton);
        QWidget::setTabOrder(generate_random_id_pushButton, client_identifier_pushButton);
        QWidget::setTabOrder(client_identifier_pushButton, will_topic_lineEdit);
        QWidget::setTabOrder(will_topic_lineEdit, will_topic_pushButton);
        QWidget::setTabOrder(will_topic_pushButton, will_message_lineEdit);
        QWidget::setTabOrder(will_message_lineEdit, will_message_pushButton);
        QWidget::setTabOrder(will_message_pushButton, user_name_lineEdit);
        QWidget::setTabOrder(user_name_lineEdit, user_name_pushButton);
        QWidget::setTabOrder(user_name_pushButton, password_lineEdit);
        QWidget::setTabOrder(password_lineEdit, show_password_checkBox);
        QWidget::setTabOrder(show_password_checkBox, password_pushButton);
        QWidget::setTabOrder(password_pushButton, connect_packet_setting_to_text);
        QWidget::setTabOrder(connect_packet_setting_to_text, subscribe_packet_index_lineEdit);
        QWidget::setTabOrder(subscribe_packet_index_lineEdit, max_qos_comboBox);
        QWidget::setTabOrder(max_qos_comboBox, max_qos_pushButton);
        QWidget::setTabOrder(max_qos_pushButton, topic_filter_lineEdit);
        QWidget::setTabOrder(topic_filter_lineEdit, topic_filter_pushButton);
        QWidget::setTabOrder(topic_filter_pushButton, subscribe_packet_setting_to_text_3);
        QWidget::setTabOrder(subscribe_packet_setting_to_text_3, setting_to_text);
        QWidget::setTabOrder(setting_to_text, text_to_setting);
        QWidget::setTabOrder(text_to_setting, file_path_lineEdit);
        QWidget::setTabOrder(file_path_lineEdit, file_load_pushButton);
        QWidget::setTabOrder(file_load_pushButton, file_save_pushButton);
        QWidget::setTabOrder(file_save_pushButton, append_content_checkBox);
        QWidget::setTabOrder(append_content_checkBox, configuration_data_clear_all_pushButton);
        QWidget::setTabOrder(configuration_data_clear_all_pushButton, configuration_data_plainTextEdit);
        QWidget::setTabOrder(configuration_data_plainTextEdit, submit_all_pushButton);
        QWidget::setTabOrder(submit_all_pushButton, device_reboot_pushButton);
        QWidget::setTabOrder(device_reboot_pushButton, port_list_comboBox);
        QWidget::setTabOrder(port_list_comboBox, baudrate_comboBox);
        QWidget::setTabOrder(baudrate_comboBox, connect_pushButton);
        QWidget::setTabOrder(connect_pushButton, close_pushButton);
        QWidget::setTabOrder(close_pushButton, data_from_comport_auto_scroll_checkBox);
        QWidget::setTabOrder(data_from_comport_auto_scroll_checkBox, data_from_com_port_clear_all_pushButton);
        QWidget::setTabOrder(data_from_com_port_clear_all_pushButton, data_from_com_port_plainTextEdit);
        QWidget::setTabOrder(data_from_com_port_plainTextEdit, publish_general_setting_checkBox);
        QWidget::setTabOrder(publish_general_setting_checkBox, retain_checkBox);
        QWidget::setTabOrder(retain_checkBox, qos_level_comboBox);
        QWidget::setTabOrder(qos_level_comboBox, dup_flag_checkBox);
        QWidget::setTabOrder(dup_flag_checkBox, publish_flag_pushButton);
        QWidget::setTabOrder(publish_flag_pushButton, topic_name_lineEdit);
        QWidget::setTabOrder(topic_name_lineEdit, topic_name_pushButton);
        QWidget::setTabOrder(topic_name_pushButton, application_message_plainTextEdit);
        QWidget::setTabOrder(application_message_plainTextEdit, application_message_pushButton);
        QWidget::setTabOrder(application_message_pushButton, application_message_clear_all_pushButton);
        QWidget::setTabOrder(application_message_clear_all_pushButton, message_builder_pushButton);
        QWidget::setTabOrder(message_builder_pushButton, publish_packet_setting_to_text);
        QWidget::setTabOrder(publish_packet_setting_to_text, publish_mode_comboBox);
        QWidget::setTabOrder(publish_mode_comboBox, push_mode_pushButton);
        QWidget::setTabOrder(push_mode_pushButton, continous_interval_lineEdit);
        QWidget::setTabOrder(continous_interval_lineEdit, continous_interval_pushButton);
        QWidget::setTabOrder(continous_interval_pushButton, trigger_type_comboBox);
        QWidget::setTabOrder(trigger_type_comboBox, trigger_type_pushButton);
        QWidget::setTabOrder(trigger_type_pushButton, trigger_pin_comboBox);
        QWidget::setTabOrder(trigger_pin_comboBox, trigger_pin_pushButton);
        QWidget::setTabOrder(trigger_pin_pushButton, uart_trigger_sign_lineEdit);
        QWidget::setTabOrder(uart_trigger_sign_lineEdit, uart_trigger_sign_pushButton);
        QWidget::setTabOrder(uart_trigger_sign_pushButton, id_filter_checkBox);
        QWidget::setTabOrder(id_filter_checkBox, id_filter_pushButton);
        QWidget::setTabOrder(id_filter_pushButton, response_enable_checkBox);
        QWidget::setTabOrder(response_enable_checkBox, response_enable_pushButton);
        QWidget::setTabOrder(response_enable_pushButton, activity_config_setting_to_text);
        QWidget::setTabOrder(activity_config_setting_to_text, hardware_tabWidget);
        QWidget::setTabOrder(hardware_tabWidget, pin_16_comboBox);
        QWidget::setTabOrder(pin_16_comboBox, pin_16_pushButton);
        QWidget::setTabOrder(pin_16_pushButton, pin_5_comboBox);
        QWidget::setTabOrder(pin_5_comboBox, pin_5_pushButton);
        QWidget::setTabOrder(pin_5_pushButton, pin_4_comboBox);
        QWidget::setTabOrder(pin_4_comboBox, pin_4_pushButton);
        QWidget::setTabOrder(pin_4_pushButton, pin_0_comboBox);
        QWidget::setTabOrder(pin_0_comboBox, pin_0_pushButton);
        QWidget::setTabOrder(pin_0_pushButton, pin_2_comboBox);
        QWidget::setTabOrder(pin_2_comboBox, pin_2_pushButton);
        QWidget::setTabOrder(pin_2_pushButton, pin_14_comboBox);
        QWidget::setTabOrder(pin_14_comboBox, pin_14_pushButton);
        QWidget::setTabOrder(pin_14_pushButton, pin_12_comboBox);
        QWidget::setTabOrder(pin_12_comboBox, pin_12_pushButton);
        QWidget::setTabOrder(pin_12_pushButton, pin_13_comboBox);
        QWidget::setTabOrder(pin_13_comboBox, pin_13_pushButton);
        QWidget::setTabOrder(pin_13_pushButton, pin_15_comboBox);
        QWidget::setTabOrder(pin_15_comboBox, pin_15_pushButton);
        QWidget::setTabOrder(pin_15_pushButton, all_to_input_pushButton);
        QWidget::setTabOrder(all_to_input_pushButton, all_to_input_pullup_pushButton);
        QWidget::setTabOrder(all_to_input_pullup_pushButton, all_to_output_pushButton);
        QWidget::setTabOrder(all_to_output_pushButton, pin_16_init_state_comboBox);
        QWidget::setTabOrder(pin_16_init_state_comboBox, pin_16_init_state_pushButton);
        QWidget::setTabOrder(pin_16_init_state_pushButton, pin_5_init_state_comboBox);
        QWidget::setTabOrder(pin_5_init_state_comboBox, pin_5_init_state_pushButton);
        QWidget::setTabOrder(pin_5_init_state_pushButton, pin_4_init_state_comboBox);
        QWidget::setTabOrder(pin_4_init_state_comboBox, pin_4_init_state_pushButton);
        QWidget::setTabOrder(pin_4_init_state_pushButton, pin_0_init_state_comboBox);
        QWidget::setTabOrder(pin_0_init_state_comboBox, pin_0_init_state_pushButton);
        QWidget::setTabOrder(pin_0_init_state_pushButton, pin_2_init_state_comboBox);
        QWidget::setTabOrder(pin_2_init_state_comboBox, pin_2_init_state_pushButton);
        QWidget::setTabOrder(pin_2_init_state_pushButton, pin_14_init_state_comboBox);
        QWidget::setTabOrder(pin_14_init_state_comboBox, pin_14_init_state_pushButton);
        QWidget::setTabOrder(pin_14_init_state_pushButton, pin_12_init_state_comboBox);
        QWidget::setTabOrder(pin_12_init_state_comboBox, pin_12_init_state_pushButton);
        QWidget::setTabOrder(pin_12_init_state_pushButton, pin_13_init_state_comboBox);
        QWidget::setTabOrder(pin_13_init_state_comboBox, pin_13_init_state_pushButton);
        QWidget::setTabOrder(pin_13_init_state_pushButton, pin_15_init_state_comboBox);
        QWidget::setTabOrder(pin_15_init_state_comboBox, pin_15_init_state_pushButton);
        QWidget::setTabOrder(pin_15_init_state_pushButton, set_all_to_0_pushButton);
        QWidget::setTabOrder(set_all_to_0_pushButton, set_all_to_1_pushButton);
        QWidget::setTabOrder(set_all_to_1_pushButton, set_all_to_old_pushButton);
        QWidget::setTabOrder(set_all_to_old_pushButton, setting_baudrate_comboBox);
        QWidget::setTabOrder(setting_baudrate_comboBox, setting_baudrate_pushButton);
        QWidget::setTabOrder(setting_baudrate_pushButton, quick_command_tabWidget);
        QWidget::setTabOrder(quick_command_tabWidget, get_broker_properties_pushButton);
        QWidget::setTabOrder(get_broker_properties_pushButton, get_connect_properties_pushButton);
        QWidget::setTabOrder(get_connect_properties_pushButton, get_activity_properties_pushButton);
        QWidget::setTabOrder(get_activity_properties_pushButton, get_subscribe_properties_pushButton);
        QWidget::setTabOrder(get_subscribe_properties_pushButton, get_pin_mode_properties_pushButton);
        QWidget::setTabOrder(get_pin_mode_properties_pushButton, get_publish_properties_pushButton);
        QWidget::setTabOrder(get_publish_properties_pushButton, get_baudrate_properties_pushButton);
        QWidget::setTabOrder(get_baudrate_properties_pushButton, pin_init_state_pushButton);
        QWidget::setTabOrder(pin_init_state_pushButton, get_all_properties_pushButton);
        QWidget::setTabOrder(get_all_properties_pushButton, connect_command_pushButton);
        QWidget::setTabOrder(connect_command_pushButton, disconnect_command_pushButton);
        QWidget::setTabOrder(disconnect_command_pushButton, subscribe_command_pushButton);
        QWidget::setTabOrder(subscribe_command_pushButton, mqtt_command_subscribe_packet_index_comboBox);
        QWidget::setTabOrder(mqtt_command_subscribe_packet_index_comboBox, unsubscribe_command_pushButton);
        QWidget::setTabOrder(unsubscribe_command_pushButton, publish_command_pushButton);
        QWidget::setTabOrder(publish_command_pushButton, ping_command_pushButton);
        QWidget::setTabOrder(ping_command_pushButton, digital_read_pin_16_pushButton);
        QWidget::setTabOrder(digital_read_pin_16_pushButton, digital_write_pin_16_checkBox);
        QWidget::setTabOrder(digital_write_pin_16_checkBox, digital_write_pin_16_pushButton);
        QWidget::setTabOrder(digital_write_pin_16_pushButton, digital_read_pin_5_pushButton);
        QWidget::setTabOrder(digital_read_pin_5_pushButton, digital_write_pin_5_checkBox);
        QWidget::setTabOrder(digital_write_pin_5_checkBox, digital_write_pin_5_pushButton);
        QWidget::setTabOrder(digital_write_pin_5_pushButton, analog_write_pin_5_lineEdit);
        QWidget::setTabOrder(analog_write_pin_5_lineEdit, analog_write_pin_5_pushButton);
        QWidget::setTabOrder(analog_write_pin_5_pushButton, digital_read_pin_4_pushButton);
        QWidget::setTabOrder(digital_read_pin_4_pushButton, digital_write_pin_4_checkBox);
        QWidget::setTabOrder(digital_write_pin_4_checkBox, digital_write_pin_4_pushButton);
        QWidget::setTabOrder(digital_write_pin_4_pushButton, analog_write_pin_4_lineEdit);
        QWidget::setTabOrder(analog_write_pin_4_lineEdit, analog_write_pin_4_pushButton);
        QWidget::setTabOrder(analog_write_pin_4_pushButton, digital_read_pin_0_pushButton);
        QWidget::setTabOrder(digital_read_pin_0_pushButton, digital_write_pin_0_checkBox);
        QWidget::setTabOrder(digital_write_pin_0_checkBox, digital_write_pin_0_pushButton);
        QWidget::setTabOrder(digital_write_pin_0_pushButton, analog_write_pin_0_lineEdit);
        QWidget::setTabOrder(analog_write_pin_0_lineEdit, analog_write_pin_0_pushButton);
        QWidget::setTabOrder(analog_write_pin_0_pushButton, digital_read_pin_2_pushButton);
        QWidget::setTabOrder(digital_read_pin_2_pushButton, digital_write_pin_2_checkBox);
        QWidget::setTabOrder(digital_write_pin_2_checkBox, digital_write_pin_2_pushButton);
        QWidget::setTabOrder(digital_write_pin_2_pushButton, analog_write_pin_2_lineEdit);
        QWidget::setTabOrder(analog_write_pin_2_lineEdit, analog_write_pin_2_pushButton);
        QWidget::setTabOrder(analog_write_pin_2_pushButton, digital_read_pin_14_pushButton);
        QWidget::setTabOrder(digital_read_pin_14_pushButton, digital_write_pin_14_checkBox);
        QWidget::setTabOrder(digital_write_pin_14_checkBox, digital_write_pin_14_pushButton);
        QWidget::setTabOrder(digital_write_pin_14_pushButton, analog_write_pin_14_lineEdit);
        QWidget::setTabOrder(analog_write_pin_14_lineEdit, analog_write_pin_14_pushButton);
        QWidget::setTabOrder(analog_write_pin_14_pushButton, digital_read_pin_12_pushButton);
        QWidget::setTabOrder(digital_read_pin_12_pushButton, digital_write_pin_12_checkBox);
        QWidget::setTabOrder(digital_write_pin_12_checkBox, digital_write_pin_12_pushButton);
        QWidget::setTabOrder(digital_write_pin_12_pushButton, analog_write_pin_12_lineEdit);
        QWidget::setTabOrder(analog_write_pin_12_lineEdit, analog_write_pin_12_pushButton);
        QWidget::setTabOrder(analog_write_pin_12_pushButton, digital_read_pin_13_pushButton);
        QWidget::setTabOrder(digital_read_pin_13_pushButton, digital_write_pin_13_checkBox);
        QWidget::setTabOrder(digital_write_pin_13_checkBox, digital_write_pin_13_pushButton);
        QWidget::setTabOrder(digital_write_pin_13_pushButton, analog_write_pin_13_lineEdit);
        QWidget::setTabOrder(analog_write_pin_13_lineEdit, analog_write_pin_13_pushButton);
        QWidget::setTabOrder(analog_write_pin_13_pushButton, digital_read_pin_15_pushButton);
        QWidget::setTabOrder(digital_read_pin_15_pushButton, digital_write_pin_15_checkBox);
        QWidget::setTabOrder(digital_write_pin_15_checkBox, digital_write_pin_15_pushButton);
        QWidget::setTabOrder(digital_write_pin_15_pushButton, analog_write_pin_15_lineEdit);
        QWidget::setTabOrder(analog_write_pin_15_lineEdit, analog_write_pin_15_pushButton);
        QWidget::setTabOrder(analog_write_pin_15_pushButton, analog_read_pin_A0_pushButton);
        QWidget::setTabOrder(analog_read_pin_A0_pushButton, uart_write_lineEdit);
        QWidget::setTabOrder(uart_write_lineEdit, uart_write_pushButton);

        retranslateUi(ESP_MQTT_Config_Window);

        setting_tabWidget->setCurrentIndex(0);
        hardware_tabWidget->setCurrentIndex(0);
        quick_command_tabWidget->setCurrentIndex(0);


        QMetaObject::connectSlotsByName(ESP_MQTT_Config_Window);
    } // setupUi

    void retranslateUi(QMainWindow *ESP_MQTT_Config_Window)
    {
        ESP_MQTT_Config_Window->setWindowTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "MQSC Configuration", nullptr));
        com_port_groupBox->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "COM Port", nullptr));
        baudrate_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "115200", nullptr));
        baudrate_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "9600", nullptr));
        baudrate_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "38400", nullptr));
        baudrate_comboBox->setItemText(3, QCoreApplication::translate("ESP_MQTT_Config_Window", "57600", nullptr));
        baudrate_comboBox->setItemText(4, QCoreApplication::translate("ESP_MQTT_Config_Window", "1200", nullptr));
        baudrate_comboBox->setItemText(5, QCoreApplication::translate("ESP_MQTT_Config_Window", "2400", nullptr));
        baudrate_comboBox->setItemText(6, QCoreApplication::translate("ESP_MQTT_Config_Window", "4800", nullptr));
        baudrate_comboBox->setItemText(7, QCoreApplication::translate("ESP_MQTT_Config_Window", "19200", nullptr));

        port_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Port", nullptr));
        baudrate_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "BaudRate", nullptr));
        connect_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Connect", nullptr));
        close_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Close", nullptr));
        connect_state_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Disconnected", nullptr));
        data_from_comport_auto_scroll_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Auto Scroll", nullptr));
        data_from_com_port_clear_all_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Clear All", nullptr));
        mqtt_setting_groupBox->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "MQTT Setting", nullptr));
        groupBox_2->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "Broker Infomation", nullptr));
        broker_port_lineEdit->setText(QString());
        broker_port_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        broker_ip_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        broker_ip_lineEdit->setPlaceholderText(QString());
        broker_port_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Broker Port", nullptr));
        broker_ip_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Broker IP", nullptr));
        groupBox_3->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "Connect Packet", nullptr));
        protocol_level_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Protocol Level", nullptr));
        will_flag_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "          Will Flag", nullptr));
        will_topic_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Will Topic", nullptr));
        password_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        user_name_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "User Name", nullptr));
        clean_session_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Clean Session", nullptr));
        will_message_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Will Message", nullptr));
        user_name_lineEdit->setText(QString());
        password_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Password", nullptr));
        password_flag_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Password Flag", nullptr));
        connect_flag_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        user_name_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        protocol_name_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        will_qos_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "0", nullptr));
        will_qos_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "1", nullptr));
        will_qos_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "2", nullptr));

        will_topic_lineEdit->setText(QString());
        protocol_level_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        protocol_name_lineEdit->setText(QString());
        will_message_lineEdit->setText(QString());
        protocol_level_lineEdit->setText(QString());
        user_flag_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "          User Flag", nullptr));
        password_lineEdit->setText(QString());
        protocol_name_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Protocol Name", nullptr));
        will_qos_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Will QoS", nullptr));
        will_message_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        will_retain_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Will Retain", nullptr));
        will_topic_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        keep_alive_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Keep Alive (s)", nullptr));
        keep_alive_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        keep_alive_lineEdit->setText(QString());
        client_identifier_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Client ID", nullptr));
        client_identifier_lineEdit->setText(QString());
        client_identifier_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        start_up_general_setting_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "General Setting", nullptr));
        general_setting_without_authentication_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "without authentication", nullptr));
        generate_random_id_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "New", nullptr));
        show_password_checkBox->setText(QString());
        password_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Hide", nullptr));
        groupBox_4->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "Subscribe Packet", nullptr));
        max_qos_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Max QoS", nullptr));
        max_qos_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        max_qos_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "0", nullptr));
        max_qos_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "1", nullptr));
        max_qos_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "2", nullptr));

        topic_filter_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Topic filter", nullptr));
        topic_filter_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        subscribe_packet_index_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Index", nullptr));
        subscribe_packet_index_lineEdit->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "0", nullptr));
        broker_info_setting_to_text->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "->", nullptr));
        connect_packet_setting_to_text->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "->", nullptr));
        subscribe_packet_setting_to_text_3->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "->", nullptr));
        setting_tabWidget->setTabText(setting_tabWidget->indexOf(start_up_tab), QCoreApplication::translate("ESP_MQTT_Config_Window", "Start up", nullptr));
        publish_general_setting_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "General Setting", nullptr));
        groupBox_5->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "Publish Packet", nullptr));
        retain_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "RETAIN", nullptr));
        application_message_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Application\n"
"Message", nullptr));
        topic_name_lineEdit->setText(QString());
        topic_name_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        message_builder_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Message\n"
"Builder", nullptr));
        topic_name_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Topic Name", nullptr));
        dup_flag_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "DUP Flag", nullptr));
        qos_level_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "0", nullptr));
        qos_level_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "1", nullptr));
        qos_level_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "2", nullptr));

        publish_flag_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        qos_level_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "QoS Level", nullptr));
        application_message_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        application_message_clear_all_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Clear All", nullptr));
        groupBox_6->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "Activity", nullptr));
        uart_trigger_sign_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        continous_interval_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        uart_trigger_sign_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Uart Trigger Sign", nullptr));
        publish_mode_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "Continous", nullptr));
        publish_mode_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "Trigger", nullptr));

        trigger_type_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "Rising and Falling", nullptr));
        trigger_type_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "Rising", nullptr));
        trigger_type_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "Falling", nullptr));

        trigger_type_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        push_mode_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        trigger_pin_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Trigger Pin", nullptr));
        continous_interval_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Continous Interval (ms)", nullptr));
        push_mode_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Publish Mode", nullptr));
        uart_trigger_sign_lineEdit->setText(QString());
        trigger_type_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Trigger Type", nullptr));
        trigger_pin_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        trigger_pin_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "16", nullptr));
        trigger_pin_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "5", nullptr));
        trigger_pin_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "4", nullptr));
        trigger_pin_comboBox->setItemText(3, QCoreApplication::translate("ESP_MQTT_Config_Window", "0", nullptr));
        trigger_pin_comboBox->setItemText(4, QCoreApplication::translate("ESP_MQTT_Config_Window", "2", nullptr));
        trigger_pin_comboBox->setItemText(5, QCoreApplication::translate("ESP_MQTT_Config_Window", "14", nullptr));
        trigger_pin_comboBox->setItemText(6, QCoreApplication::translate("ESP_MQTT_Config_Window", "12", nullptr));
        trigger_pin_comboBox->setItemText(7, QCoreApplication::translate("ESP_MQTT_Config_Window", "13", nullptr));
        trigger_pin_comboBox->setItemText(8, QCoreApplication::translate("ESP_MQTT_Config_Window", "15", nullptr));

        id_filter_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Filter Message by Client Identifier", nullptr));
        id_filter_checkBox->setText(QString());
        id_filter_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        response_enable_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        response_enable_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Response Enable", nullptr));
        response_enable_checkBox->setText(QString());
        print_mqtt_event_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        print_mqtt_event_checkBox->setText(QString());
        print_mqtt_event_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "MQTT Event to Serial", nullptr));
        print_mqtt_message_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "MQTT Message to Serial", nullptr));
        print_mqtt_message_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        publish_data_from_serial_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        publish_data_from_serial_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Publish Serial data", nullptr));
        mqtt_message_as_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "as", nullptr));
        mqtt_message_type_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "NONE", nullptr));
        mqtt_message_type_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "NORMAL", nullptr));
        mqtt_message_type_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "JSON", nullptr));
        mqtt_message_type_comboBox->setItemText(3, QCoreApplication::translate("ESP_MQTT_Config_Window", "HEX", nullptr));

        serial_message_type_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "NONE", nullptr));
        serial_message_type_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "NORMAL", nullptr));
        serial_message_type_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "JSON", nullptr));
        serial_message_type_comboBox->setItemText(3, QCoreApplication::translate("ESP_MQTT_Config_Window", "HEX", nullptr));
        serial_message_type_comboBox->setItemText(4, QCoreApplication::translate("ESP_MQTT_Config_Window", "HEX_IN_JSON", nullptr));

        publish_data_from_serial_as_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "as", nullptr));
        publish_packet_setting_to_text->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "->", nullptr));
        activity_config_setting_to_text->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "->", nullptr));
        setting_tabWidget->setTabText(setting_tabWidget->indexOf(publish_tab), QCoreApplication::translate("ESP_MQTT_Config_Window", "Publish", nullptr));
        pin_5_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_5_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_5_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        pin_14_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_5_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_15_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO15", nullptr));
        pin_16_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_16_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_16_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        pin_2_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO2", nullptr));
        pin_13_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_13_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_13_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        pin_2_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_5_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO5", nullptr));
        pin_0_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_15_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_4_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_0_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_0_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_0_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        pin_13_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_0_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO0", nullptr));
        pin_14_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO14", nullptr));
        pin_16_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO16", nullptr));
        pin_4_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_4_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_4_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        pin_14_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_14_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_14_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        pin_12_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO12", nullptr));
        pin_4_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO4", nullptr));
        pin_12_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_12_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_12_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        pin_12_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_2_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_2_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_2_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        pin_16_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_13_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO13", nullptr));
        pin_15_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_MODE", nullptr));
        pin_15_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "OUTPUT_MODE", nullptr));
        pin_15_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "INPUT_PULLUP_MODE", nullptr));

        groupBox->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "Output Init State", nullptr));
        pin_0_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO0", nullptr));
        pin_4_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_14_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_4_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO4", nullptr));
        pin_16_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_13_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_12_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_13_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO13", nullptr));
        pin_16_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_16_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_16_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        pin_15_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_14_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO14", nullptr));
        pin_15_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO15", nullptr));
        pin_5_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO5", nullptr));
        pin_0_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_16_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO16", nullptr));
        pin_12_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO12", nullptr));
        pin_5_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_2_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        pin_2_label_2->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO2", nullptr));
        set_all_to_0_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "All LOW", nullptr));
        set_all_to_1_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "All HIGH", nullptr));
        set_all_to_old_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "All OLD", nullptr));
        pin_5_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_5_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_5_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        pin_4_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_4_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_4_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        pin_0_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_0_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_0_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        pin_14_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_14_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_14_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        pin_12_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_12_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_12_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        pin_13_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_13_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_13_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        pin_15_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_15_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_15_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        pin_2_init_state_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "LOW", nullptr));
        pin_2_init_state_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "HIGH", nullptr));
        pin_2_init_state_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "OLD", nullptr));

        all_to_input_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "All to INPUT", nullptr));
        all_to_input_pullup_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "All to INPUT_PULLUP", nullptr));
        all_to_output_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "All to OUTPUT", nullptr));
        hardware_tabWidget->setTabText(hardware_tabWidget->indexOf(gpio_tab), QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO", nullptr));
        setting_baudrate_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "115200", nullptr));
        setting_baudrate_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "9600", nullptr));
        setting_baudrate_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "38400", nullptr));
        setting_baudrate_comboBox->setItemText(3, QCoreApplication::translate("ESP_MQTT_Config_Window", "57600", nullptr));
        setting_baudrate_comboBox->setItemText(4, QCoreApplication::translate("ESP_MQTT_Config_Window", "1200", nullptr));
        setting_baudrate_comboBox->setItemText(5, QCoreApplication::translate("ESP_MQTT_Config_Window", "2400", nullptr));
        setting_baudrate_comboBox->setItemText(6, QCoreApplication::translate("ESP_MQTT_Config_Window", "4800", nullptr));
        setting_baudrate_comboBox->setItemText(7, QCoreApplication::translate("ESP_MQTT_Config_Window", "19200", nullptr));
        setting_baudrate_comboBox->setItemText(8, QCoreApplication::translate("ESP_MQTT_Config_Window", "300", nullptr));
        setting_baudrate_comboBox->setItemText(9, QCoreApplication::translate("ESP_MQTT_Config_Window", "74880", nullptr));
        setting_baudrate_comboBox->setItemText(10, QCoreApplication::translate("ESP_MQTT_Config_Window", "230400", nullptr));
        setting_baudrate_comboBox->setItemText(11, QCoreApplication::translate("ESP_MQTT_Config_Window", "250000", nullptr));
        setting_baudrate_comboBox->setItemText(12, QCoreApplication::translate("ESP_MQTT_Config_Window", "500000", nullptr));

        setting_baudrate_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "BaudRate", nullptr));
        setting_baudrate_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit", nullptr));
        hardware_tabWidget->setTabText(hardware_tabWidget->indexOf(serial_tab), QCoreApplication::translate("ESP_MQTT_Config_Window", "Serial", nullptr));
        setting_tabWidget->setTabText(setting_tabWidget->indexOf(hardware_tab), QCoreApplication::translate("ESP_MQTT_Config_Window", "Hardware", nullptr));
        get_properties_command_groupBox->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Properties Command", nullptr));
        get_publish_properties_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Publish Properties", nullptr));
        get_connect_properties_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Connect Properties", nullptr));
        get_activity_properties_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Avtivity  Properties", nullptr));
        get_broker_properties_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Broker Properties", nullptr));
        get_subscribe_properties_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Subscribe Properties", nullptr));
        get_pin_mode_properties_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Pin Mode Properties", nullptr));
        get_all_properties_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get All Properties", nullptr));
        get_baudrate_properties_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Baudrate Properties", nullptr));
        pin_init_state_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Get Pin Init State", nullptr));
        quick_command_tabWidget->setTabText(quick_command_tabWidget->indexOf(tab_10), QCoreApplication::translate("ESP_MQTT_Config_Window", "General Command", nullptr));
        mqtt_command_groupBox->setTitle(QCoreApplication::translate("ESP_MQTT_Config_Window", "MQTT Command", nullptr));
        disconnect_command_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Disconnect", nullptr));
        connect_command_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Connect", nullptr));
        subscribe_command_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Subscribe", nullptr));
        unsubscribe_command_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Unsubscribe", nullptr));
        publish_command_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Publish", nullptr));
        ping_command_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Ping", nullptr));
        mqtt_command_subscribe_packet_index_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Index", nullptr));
        mqtt_command_subscribe_packet_index_comboBox->setItemText(0, QCoreApplication::translate("ESP_MQTT_Config_Window", "All", nullptr));
        mqtt_command_subscribe_packet_index_comboBox->setItemText(1, QCoreApplication::translate("ESP_MQTT_Config_Window", "0", nullptr));
        mqtt_command_subscribe_packet_index_comboBox->setItemText(2, QCoreApplication::translate("ESP_MQTT_Config_Window", "1", nullptr));
        mqtt_command_subscribe_packet_index_comboBox->setItemText(3, QCoreApplication::translate("ESP_MQTT_Config_Window", "2", nullptr));
        mqtt_command_subscribe_packet_index_comboBox->setItemText(4, QCoreApplication::translate("ESP_MQTT_Config_Window", "3", nullptr));
        mqtt_command_subscribe_packet_index_comboBox->setItemText(5, QCoreApplication::translate("ESP_MQTT_Config_Window", "4", nullptr));

        quick_command_tabWidget->setTabText(quick_command_tabWidget->indexOf(tab_11), QCoreApplication::translate("ESP_MQTT_Config_Window", "MQTT Command", nullptr));
        control_pin_14_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO14", nullptr));
        control_pin_16_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO16", nullptr));
        control_pin_5_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO5", nullptr));
        control_pin_13_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO13", nullptr));
        control_pin_2_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO2", nullptr));
        control_pin_0_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO0", nullptr));
        control_pin_15_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO15", nullptr));
        control_pin_4_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO4", nullptr));
        control_pin_12_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "GPIO12", nullptr));
        digital_read_pin_16_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_read_pin_5_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_read_pin_4_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_read_pin_0_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_read_pin_2_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_read_pin_14_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_read_pin_12_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_read_pin_13_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_read_pin_15_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Read", nullptr));
        digital_write_pin_16_checkBox->setText(QString());
        digital_write_pin_16_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        digital_write_pin_5_checkBox->setText(QString());
        digital_write_pin_5_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        digital_write_pin_4_checkBox->setText(QString());
        digital_write_pin_4_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        digital_write_pin_0_checkBox->setText(QString());
        digital_write_pin_0_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        digital_write_pin_2_checkBox->setText(QString());
        digital_write_pin_2_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        digital_write_pin_14_checkBox->setText(QString());
        digital_write_pin_14_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        digital_write_pin_12_checkBox->setText(QString());
        digital_write_pin_12_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        digital_write_pin_13_checkBox->setText(QString());
        digital_write_pin_13_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        digital_write_pin_15_checkBox->setText(QString());
        digital_write_pin_15_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Digital Write", nullptr));
        analog_write_pin_5_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM Write", nullptr));
        analog_write_pin_4_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM Write", nullptr));
        analog_write_pin_0_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM Write", nullptr));
        analog_write_pin_2_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM Write", nullptr));
        analog_write_pin_14_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM Write", nullptr));
        analog_write_pin_12_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM Write", nullptr));
        analog_write_pin_13_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM Write", nullptr));
        analog_write_pin_15_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM Write", nullptr));
        control_pin_A0_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "A0", nullptr));
        analog_read_pin_A0_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Analog Read", nullptr));
        uart_write_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Serial Write", nullptr));
        control_uart_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "UART", nullptr));
        response_as_json_checkBox->setText(QString());
        response_as_json_label->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Return as JSON", nullptr));
        control_pin_16_label_3->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "PWM value: 0 -> 1024", nullptr));
        label->setText(QString());
        quick_command_tabWidget->setTabText(quick_command_tabWidget->indexOf(tab_3), QCoreApplication::translate("ESP_MQTT_Config_Window", "IO Command", nullptr));
        setting_tabWidget->setTabText(setting_tabWidget->indexOf(quick_command), QCoreApplication::translate("ESP_MQTT_Config_Window", "Quick Command", nullptr));
        setting_tabWidget->setTabText(setting_tabWidget->indexOf(on_received_tab), QCoreApplication::translate("ESP_MQTT_Config_Window", "...", nullptr));
        append_content_checkBox->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Append Content", nullptr));
        file_save_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Save", nullptr));
        text_to_setting->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "<-", nullptr));
        file_path_lable->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "File Path", nullptr));
        file_load_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Load", nullptr));
        submit_all_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Submit All", nullptr));
        setting_to_text->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "->", nullptr));
        configuration_data_plainTextEdit->setPlainText(QString());
        device_reboot_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Device Reboot", nullptr));
        configuration_data_clear_all_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "Clear All", nullptr));
        response_to_command_pushButton->setText(QCoreApplication::translate("ESP_MQTT_Config_Window", "RSP->CMD", nullptr));
    } // retranslateUi

};

namespace Ui {
    class ESP_MQTT_Config_Window: public Ui_ESP_MQTT_Config_Window {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_ESP_MQTT_CONFIG_WINDOW_H
